From: Ben Hutchings <ben@decadent.org.uk>
Subject: firmware: Remove redundant log messages from drivers
Date: Sun, 09 Dec 2012 16:40:31 +0000
Forwarded: no

Now that firmware_class logs every success and failure consistently,
many other log messages can be removed from drivers.

This will probably need to be split up into multiple patches prior to
upstream submission.

Index: linux/arch/x86/kernel/cpu/microcode/amd.c
===================================================================
--- linux.orig/arch/x86/kernel/cpu/microcode/amd.c
+++ linux/arch/x86/kernel/cpu/microcode/amd.c
@@ -900,10 +900,8 @@ static enum ucode_state request_microcod
 	if (c->x86 >= 0x15)
 		snprintf(fw_name, sizeof(fw_name), "amd-ucode/microcode_amd_fam%.2xh.bin", c->x86);
 
-	if (request_firmware_direct(&fw, (const char *)fw_name, device)) {
-		pr_debug("failed to load file %s\n", fw_name);
+	if (request_firmware_direct(&fw, (const char *)fw_name, device))
 		goto out;
-	}
 
 	ret = UCODE_ERROR;
 	if (!verify_container(fw->data, fw->size, false))
Index: linux/drivers/atm/ambassador.c
===================================================================
--- linux.orig/drivers/atm/ambassador.c
+++ linux/drivers/atm/ambassador.c
@@ -1914,10 +1914,8 @@ static int ucode_init(loader_block *lb,
   int res;
 
   res = request_ihex_firmware(&fw, "atmsar11.fw", &dev->pci_dev->dev);
-  if (res) {
-    PRINTK (KERN_ERR, "Cannot load microcode data");
+  if (res)
     return res;
-  }
 
   /* First record contains just the start address */
   rec = (const struct ihex_binrec *)fw->data;
Index: linux/drivers/atm/fore200e.c
===================================================================
--- linux.orig/drivers/atm/fore200e.c
+++ linux/drivers/atm/fore200e.c
@@ -2398,10 +2398,9 @@ static int fore200e_load_and_start_fw(st
     int err;
 
     sprintf(buf, "%s%s", fore200e->bus->proc_name, FW_EXT);
-    if ((err = request_firmware(&firmware, buf, fore200e->dev)) < 0) {
-	printk(FORE200E "problem loading firmware image %s\n", fore200e->bus->model_name);
+    err = request_firmware(&firmware, buf, fore200e->dev);
+    if (err)
 	return err;
-    }
 
     fw_data = (const __le32 *)firmware->data;
     fw_size = firmware->size / sizeof(u32);
Index: linux/drivers/bluetooth/ath3k.c
===================================================================
--- linux.orig/drivers/bluetooth/ath3k.c
+++ linux/drivers/bluetooth/ath3k.c
@@ -382,10 +382,8 @@ static int ath3k_load_patch(struct usb_d
 		 le32_to_cpu(fw_version.rom_version));
 
 	ret = request_firmware(&firmware, filename, &udev->dev);
-	if (ret < 0) {
-		BT_ERR("Patch file not found %s", filename);
+	if (ret)
 		return ret;
-	}
 
 	pt_rom_version = get_unaligned_le32(firmware->data +
 					    firmware->size - 8);
@@ -445,10 +443,8 @@ static int ath3k_load_syscfg(struct usb_
 		le32_to_cpu(fw_version.rom_version), clk_value, ".dfu");
 
 	ret = request_firmware(&firmware, filename, &udev->dev);
-	if (ret < 0) {
-		BT_ERR("Configuration file not found %s", filename);
+	if (ret)
 		return ret;
-	}
 
 	ret = ath3k_load_fwfile(udev, firmware);
 	release_firmware(firmware);
Index: linux/drivers/bluetooth/bcm203x.c
===================================================================
--- linux.orig/drivers/bluetooth/bcm203x.c
+++ linux/drivers/bluetooth/bcm203x.c
@@ -174,7 +174,6 @@ static int bcm203x_probe(struct usb_inte
 		return -ENOMEM;
 
 	if (request_firmware(&firmware, "BCM2033-MD.hex", &udev->dev) < 0) {
-		BT_ERR("Mini driver request failed");
 		usb_free_urb(data->urb);
 		return -EIO;
 	}
@@ -199,7 +198,6 @@ static int bcm203x_probe(struct usb_inte
 	release_firmware(firmware);
 
 	if (request_firmware(&firmware, "BCM2033-FW.bin", &udev->dev) < 0) {
-		BT_ERR("Firmware request failed");
 		usb_free_urb(data->urb);
 		kfree(data->buffer);
 		return -EIO;
Index: linux/drivers/bluetooth/bfusb.c
===================================================================
--- linux.orig/drivers/bluetooth/bfusb.c
+++ linux/drivers/bluetooth/bfusb.c
@@ -636,10 +636,8 @@ static int bfusb_probe(struct usb_interf
 	skb_queue_head_init(&data->pending_q);
 	skb_queue_head_init(&data->completed_q);
 
-	if (request_firmware(&firmware, "bfubase.frm", &udev->dev) < 0) {
-		BT_ERR("Firmware request failed");
+	if (request_firmware(&firmware, "bfubase.frm", &udev->dev))
 		goto done;
-	}
 
 	BT_DBG("firmware data %p size %zu", firmware->data, firmware->size);
 
Index: linux/drivers/bluetooth/bt3c_cs.c
===================================================================
--- linux.orig/drivers/bluetooth/bt3c_cs.c
+++ linux/drivers/bluetooth/bt3c_cs.c
@@ -569,10 +569,8 @@ static int bt3c_open(struct bt3c_info *i
 
 	/* Load firmware */
 	err = request_firmware(&firmware, "BT3CPCC.bin", &info->p_dev->dev);
-	if (err < 0) {
-		BT_ERR("Firmware request failed");
+	if (err)
 		goto error;
-	}
 
 	err = bt3c_load_firmware(info, firmware->data, firmware->size);
 
Index: linux/drivers/bluetooth/btmrvl_sdio.c
===================================================================
--- linux.orig/drivers/bluetooth/btmrvl_sdio.c
+++ linux/drivers/bluetooth/btmrvl_sdio.c
@@ -483,8 +483,6 @@ static int btmrvl_sdio_download_helper(s
 	ret = request_firmware(&fw_helper, card->helper,
 						&card->func->dev);
 	if ((ret < 0) || !fw_helper) {
-		BT_ERR("request_firmware(helper) failed, error code = %d",
-									ret);
 		ret = -ENOENT;
 		goto done;
 	}
@@ -583,8 +581,6 @@ static int btmrvl_sdio_download_fw_w_hel
 	ret = request_firmware(&fw_firmware, card->firmware,
 							&card->func->dev);
 	if ((ret < 0) || !fw_firmware) {
-		BT_ERR("request_firmware(firmware) failed, error code = %d",
-									ret);
 		ret = -ENOENT;
 		goto done;
 	}
Index: linux/drivers/char/dsp56k.c
===================================================================
--- linux.orig/drivers/char/dsp56k.c
+++ linux/drivers/char/dsp56k.c
@@ -140,11 +140,8 @@ static int dsp56k_upload(u_char __user *
 	}
 	err = request_firmware(&fw, fw_name, &pdev->dev);
 	platform_device_unregister(pdev);
-	if (err) {
-		printk(KERN_ERR "Failed to load image \"%s\" err %d\n",
-		       fw_name, err);
+	if (err)
 		return err;
-	}
 	if (fw->size % 3) {
 		printk(KERN_ERR "Bogus length %d in image \"%s\"\n",
 		       fw->size, fw_name);
Index: linux/drivers/dma/imx-sdma.c
===================================================================
--- linux.orig/drivers/dma/imx-sdma.c
+++ linux/drivers/dma/imx-sdma.c
@@ -1800,11 +1800,8 @@ static void sdma_load_firmware(const str
 	const struct sdma_script_start_addrs *addr;
 	unsigned short *ram_code;
 
-	if (!fw) {
-		dev_info(sdma->dev, "external firmware not found, using ROM firmware\n");
-		/* In this case we just use the ROM firmware. */
+	if (!fw)
 		return;
-	}
 
 	if (fw->size < sizeof(*header))
 		goto err_firmware;
Index: linux/drivers/gpu/drm/mga/mga_warp.c
===================================================================
--- linux.orig/drivers/gpu/drm/mga/mga_warp.c
+++ linux/drivers/gpu/drm/mga/mga_warp.c
@@ -77,11 +77,8 @@ int mga_warp_install_microcode(drm_mga_p
 	}
 	rc = request_ihex_firmware(&fw, firmware_name, &pdev->dev);
 	platform_device_unregister(pdev);
-	if (rc) {
-		DRM_ERROR("mga: Failed to load microcode \"%s\"\n",
-			  firmware_name);
+	if (rc)
 		return rc;
-	}
 
 	size = 0;
 	where = 0;
Index: linux/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
===================================================================
--- linux.orig/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
+++ linux/drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c
@@ -2445,10 +2445,8 @@ gf100_gr_load_fw(struct gf100_gr *gr, co
 	if (ret) {
 		snprintf(f, sizeof(f), "nouveau/%s", name);
 		ret = request_firmware(&fw, f, device->dev);
-		if (ret) {
-			nvkm_error(subdev, "failed to load %s\n", name);
+		if (ret)
 			return ret;
-		}
 	}
 
 	blob->size = fw->size;
Index: linux/drivers/gpu/drm/r128/r128_cce.c
===================================================================
--- linux.orig/drivers/gpu/drm/r128/r128_cce.c
+++ linux/drivers/gpu/drm/r128/r128_cce.c
@@ -161,11 +161,8 @@ static int r128_cce_load_microcode(drm_r
 	}
 	rc = request_firmware(&fw, FIRMWARE_NAME, &pdev->dev);
 	platform_device_unregister(pdev);
-	if (rc) {
-		pr_err("r128_cce: Failed to load firmware \"%s\"\n",
-		       FIRMWARE_NAME);
+	if (rc)
 		return rc;
-	}
 
 	if (fw->size != 256 * 8) {
 		pr_err("r128_cce: Bogus length %zu in firmware \"%s\"\n",
Index: linux/drivers/gpu/drm/radeon/ni.c
===================================================================
--- linux.orig/drivers/gpu/drm/radeon/ni.c
+++ linux/drivers/gpu/drm/radeon/ni.c
@@ -820,9 +820,6 @@ int ni_init_microcode(struct radeon_devi
 
 out:
 	if (err) {
-		if (err != -EINVAL)
-			pr_err("ni_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
Index: linux/drivers/gpu/drm/radeon/r100.c
===================================================================
--- linux.orig/drivers/gpu/drm/radeon/r100.c
+++ linux/drivers/gpu/drm/radeon/r100.c
@@ -1056,9 +1056,7 @@ static int r100_cp_init_microcode(struct
 	}
 
 	err = request_firmware(&rdev->me_fw, fw_name, rdev->dev);
-	if (err) {
-		pr_err("radeon_cp: Failed to load firmware \"%s\"\n", fw_name);
-	} else if (rdev->me_fw->size % 8) {
+	if (err == 0 && rdev->me_fw->size % 8) {
 		pr_err("radeon_cp: Bogus length %zu in firmware \"%s\"\n",
 		       rdev->me_fw->size, fw_name);
 		err = -EINVAL;
Index: linux/drivers/gpu/drm/radeon/r600.c
===================================================================
--- linux.orig/drivers/gpu/drm/radeon/r600.c
+++ linux/drivers/gpu/drm/radeon/r600.c
@@ -2600,9 +2600,6 @@ int r600_init_microcode(struct radeon_de
 
 out:
 	if (err) {
-		if (err != -EINVAL)
-			pr_err("r600_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
Index: linux/drivers/infiniband/hw/qib/qib_sd7220.c
===================================================================
--- linux.orig/drivers/infiniband/hw/qib/qib_sd7220.c
+++ linux/drivers/infiniband/hw/qib/qib_sd7220.c
@@ -406,10 +406,8 @@ int qib_sd7220_init(struct qib_devdata *
 	}
 
 	ret = request_firmware(&fw, SD7220_FW_NAME, &dd->pcidev->dev);
-	if (ret) {
-		qib_dev_err(dd, "Failed to load IB SERDES image\n");
+	if (ret)
 		goto done;
-	}
 
 	/* Substitute our deduced value for was_reset */
 	ret = qib_ibsd_ucode_loaded(dd->pport, fw);
Index: linux/drivers/input/touchscreen/atmel_mxt_ts.c
===================================================================
--- linux.orig/drivers/input/touchscreen/atmel_mxt_ts.c
+++ linux/drivers/input/touchscreen/atmel_mxt_ts.c
@@ -2870,10 +2870,8 @@ static int mxt_load_fw(struct device *de
 	int ret;
 
 	ret = request_firmware(&fw, fn, dev);
-	if (ret) {
-		dev_err(dev, "Unable to open firmware %s\n", fn);
+	if (ret)
 		return ret;
-	}
 
 	/* Check for incorrect enc file */
 	ret = mxt_check_firmware_format(dev, fw);
Index: linux/drivers/isdn/hardware/mISDN/speedfax.c
===================================================================
--- linux.orig/drivers/isdn/hardware/mISDN/speedfax.c
+++ linux/drivers/isdn/hardware/mISDN/speedfax.c
@@ -379,11 +379,8 @@ setup_instance(struct sfax_hw *card)
 	card->isar.owner = THIS_MODULE;
 
 	err = request_firmware(&firmware, "isdn/ISAR.BIN", &card->pdev->dev);
-	if (err < 0) {
-		pr_info("%s: firmware request failed %d\n",
-			card->name, err);
+	if (err)
 		goto error_fw;
-	}
 	if (debug & DEBUG_HW)
 		pr_notice("%s: got firmware %zu bytes\n",
 			  card->name, firmware->size);
Index: linux/drivers/media/common/siano/smscoreapi.c
===================================================================
--- linux.orig/drivers/media/common/siano/smscoreapi.c
+++ linux/drivers/media/common/siano/smscoreapi.c
@@ -1152,10 +1152,8 @@ static int smscore_load_firmware_from_fi
 		return -EINVAL;
 
 	rc = request_firmware(&fw, fw_filename, coredev->device);
-	if (rc < 0) {
-		pr_err("failed to open firmware file '%s'\n", fw_filename);
+	if (rc < 0)
 		return rc;
-	}
 	pr_debug("read fw %s, buffer size=0x%zx\n", fw_filename, fw->size);
 	fw_buf = kmalloc(ALIGN(fw->size + sizeof(struct sms_firmware),
 			 SMS_ALLOC_ALIGNMENT), GFP_KERNEL | coredev->gfp_buf_flags);
Index: linux/drivers/media/dvb-frontends/af9013.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/af9013.c
+++ linux/drivers/media/dvb-frontends/af9013.c
@@ -1049,14 +1049,8 @@ static int af9013_download_firmware(stru
 
 	/* Request the firmware, will block and timeout */
 	ret = request_firmware(&firmware, name, &client->dev);
-	if (ret) {
-		dev_info(&client->dev, "firmware file '%s' not found %d\n",
-			 name, ret);
+	if (ret)
 		goto err;
-	}
-
-	dev_info(&client->dev, "downloading firmware from file '%s'\n",
-		 name);
 
 	/* Write firmware checksum & size */
 	for (i = 0; i < firmware->size; i++)
Index: linux/drivers/media/dvb-frontends/bcm3510.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/bcm3510.c
+++ linux/drivers/media/dvb-frontends/bcm3510.c
@@ -636,10 +636,9 @@ static int bcm3510_download_firmware(str
 	int ret,i;
 
 	deb_info("requesting firmware\n");
-	if ((ret = st->config->request_firmware(fe, &fw, BCM3510_DEFAULT_FIRMWARE)) < 0) {
-		err("could not load firmware (%s): %d",BCM3510_DEFAULT_FIRMWARE,ret);
+	ret = st->config->request_firmware(fe, &fw, BCM3510_DEFAULT_FIRMWARE);
+	if (ret)
 		return ret;
-	}
 	deb_info("got firmware: %zu\n", fw->size);
 
 	b = fw->data;
Index: linux/drivers/media/dvb-frontends/cx24116.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/cx24116.c
+++ linux/drivers/media/dvb-frontends/cx24116.c
@@ -479,13 +479,8 @@ static int cx24116_firmware_ondemand(str
 			__func__, CX24116_DEFAULT_FIRMWARE);
 		ret = request_firmware(&fw, CX24116_DEFAULT_FIRMWARE,
 			state->i2c->dev.parent);
-		printk(KERN_INFO "%s: Waiting for firmware upload(2)...\n",
-			__func__);
-		if (ret) {
-			printk(KERN_ERR "%s: No firmware uploaded (timeout or file not found?)\n",
-			       __func__);
+		if (ret)
 			return ret;
-		}
 
 		/* Make sure we don't recurse back through here
 		 * during loading */
Index: linux/drivers/media/dvb-frontends/drxd_hard.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/drxd_hard.c
+++ linux/drivers/media/dvb-frontends/drxd_hard.c
@@ -891,10 +891,8 @@ static int load_firmware(struct drxd_sta
 {
 	const struct firmware *fw;
 
-	if (request_firmware(&fw, fw_name, state->dev) < 0) {
-		printk(KERN_ERR "drxd: firmware load failure [%s]\n", fw_name);
+	if (request_firmware(&fw, fw_name, state->dev))
 		return -EIO;
-	}
 
 	state->microcode = kmemdup(fw->data, fw->size, GFP_KERNEL);
 	if (!state->microcode) {
Index: linux/drivers/media/dvb-frontends/drxk_hard.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/drxk_hard.c
+++ linux/drivers/media/dvb-frontends/drxk_hard.c
@@ -6260,10 +6260,6 @@ static void load_firmware_cb(const struc
 
 	dprintk(1, ": %s\n", fw ? "firmware loaded" : "firmware not loaded");
 	if (!fw) {
-		pr_err("Could not load firmware file %s.\n",
-			state->microcode_name);
-		pr_info("Copy %s to your hotplug directory!\n",
-			state->microcode_name);
 		state->microcode_name = NULL;
 
 		/*
Index: linux/drivers/media/dvb-frontends/ds3000.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/ds3000.c
+++ linux/drivers/media/dvb-frontends/ds3000.c
@@ -348,12 +348,8 @@ static int ds3000_firmware_ondemand(stru
 				DS3000_DEFAULT_FIRMWARE);
 	ret = request_firmware(&fw, DS3000_DEFAULT_FIRMWARE,
 				state->i2c->dev.parent);
-	printk(KERN_INFO "%s: Waiting for firmware upload(2)...\n", __func__);
-	if (ret) {
-		printk(KERN_ERR "%s: No firmware uploaded (timeout or file not found?)\n",
-		       __func__);
+	if (ret)
 		return ret;
-	}
 
 	ret = ds3000_load_firmware(fe, fw);
 	if (ret)
Index: linux/drivers/media/dvb-frontends/nxt200x.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/nxt200x.c
+++ linux/drivers/media/dvb-frontends/nxt200x.c
@@ -861,12 +861,8 @@ static int nxt2002_init(struct dvb_front
 		 __func__, NXT2002_DEFAULT_FIRMWARE);
 	ret = request_firmware(&fw, NXT2002_DEFAULT_FIRMWARE,
 			       state->i2c->dev.parent);
-	pr_debug("%s: Waiting for firmware upload(2)...\n", __func__);
-	if (ret) {
-		pr_err("%s: No firmware uploaded (timeout or file not found?)\n",
-		       __func__);
+	if (ret)
 		return ret;
-	}
 
 	ret = nxt2002_load_firmware(fe, fw);
 	release_firmware(fw);
@@ -928,12 +924,8 @@ static int nxt2004_init(struct dvb_front
 		 __func__, NXT2004_DEFAULT_FIRMWARE);
 	ret = request_firmware(&fw, NXT2004_DEFAULT_FIRMWARE,
 			       state->i2c->dev.parent);
-	pr_debug("%s: Waiting for firmware upload(2)...\n", __func__);
-	if (ret) {
-		pr_err("%s: No firmware uploaded (timeout or file not found?)\n",
-		       __func__);
+	if (ret)
 		return ret;
-	}
 
 	ret = nxt2004_load_firmware(fe, fw);
 	release_firmware(fw);
Index: linux/drivers/media/dvb-frontends/or51132.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/or51132.c
+++ linux/drivers/media/dvb-frontends/or51132.c
@@ -326,10 +326,8 @@ static int or51132_set_parameters(struct
 		printk("or51132: Waiting for firmware upload(%s)...\n",
 		       fwname);
 		ret = request_firmware(&fw, fwname, state->i2c->dev.parent);
-		if (ret) {
-			printk(KERN_WARNING "or51132: No firmware uploaded(timeout or file not found?)\n");
+		if (ret)
 			return ret;
-		}
 		ret = or51132_load_firmware(fe, fw);
 		release_firmware(fw);
 		if (ret) {
Index: linux/drivers/media/dvb-frontends/or51211.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/or51211.c
+++ linux/drivers/media/dvb-frontends/or51211.c
@@ -361,11 +361,8 @@ static int or51211_init(struct dvb_front
 			OR51211_DEFAULT_FIRMWARE);
 		ret = config->request_firmware(fe, &fw,
 					       OR51211_DEFAULT_FIRMWARE);
-		pr_info("Got Hotplug firmware\n");
-		if (ret) {
-			pr_warn("No firmware uploaded (timeout or file not found?)\n");
+		if (ret)
 			return ret;
-		}
 
 		ret = or51211_load_firmware(fe, fw);
 		release_firmware(fw);
Index: linux/drivers/media/dvb-frontends/sp887x.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/sp887x.c
+++ linux/drivers/media/dvb-frontends/sp887x.c
@@ -527,10 +527,8 @@ static int sp887x_init(struct dvb_fronte
 		/* request the firmware, this will block until someone uploads it */
 		printk("sp887x: waiting for firmware upload (%s)...\n", SP887X_DEFAULT_FIRMWARE);
 		ret = state->config->request_firmware(fe, &fw, SP887X_DEFAULT_FIRMWARE);
-		if (ret) {
-			printk("sp887x: no firmware upload (timeout or file not found?)\n");
+		if (ret)
 			return ret;
-		}
 
 		ret = sp887x_initial_setup(fe, fw);
 		release_firmware(fw);
Index: linux/drivers/media/dvb-frontends/tda10048.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/tda10048.c
+++ linux/drivers/media/dvb-frontends/tda10048.c
@@ -483,8 +483,6 @@ static int tda10048_firmware_upload(stru
 	ret = request_firmware(&fw, TDA10048_DEFAULT_FIRMWARE,
 		state->i2c->dev.parent);
 	if (ret) {
-		printk(KERN_ERR "%s: Upload failed. (file not found?)\n",
-			__func__);
 		return -EIO;
 	} else {
 		printk(KERN_INFO "%s: firmware read %zu bytes.\n",
Index: linux/drivers/media/dvb-frontends/tda1004x.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/tda1004x.c
+++ linux/drivers/media/dvb-frontends/tda1004x.c
@@ -388,10 +388,8 @@ static int tda10045_fwupload(struct dvb_
 	/* request the firmware, this will block until someone uploads it */
 	printk(KERN_INFO "tda1004x: waiting for firmware upload (%s)...\n", TDA10045_DEFAULT_FIRMWARE);
 	ret = state->config->request_firmware(fe, &fw, TDA10045_DEFAULT_FIRMWARE);
-	if (ret) {
-		printk(KERN_ERR "tda1004x: no firmware upload (timeout or file not found?)\n");
+	if (ret)
 		return ret;
-	}
 
 	/* reset chip */
 	tda1004x_write_mask(state, TDA1004X_CONFC4, 0x10, 0);
@@ -532,7 +530,6 @@ static int tda10046_fwupload(struct dvb_
 			/* remain compatible to old bug: try to load with tda10045 image name */
 			ret = state->config->request_firmware(fe, &fw, TDA10045_DEFAULT_FIRMWARE);
 			if (ret) {
-				printk(KERN_ERR "tda1004x: no firmware upload (timeout or file not found?)\n");
 				return ret;
 			} else {
 				printk(KERN_INFO "tda1004x: please rename the firmware file to %s\n",
Index: linux/drivers/media/dvb-frontends/tda10071.c
===================================================================
--- linux.orig/drivers/media/dvb-frontends/tda10071.c
+++ linux/drivers/media/dvb-frontends/tda10071.c
@@ -838,12 +838,8 @@ static int tda10071_init(struct dvb_fron
 
 		/* request the firmware, this will block and timeout */
 		ret = request_firmware(&fw, fw_file, &client->dev);
-		if (ret) {
-			dev_err(&client->dev,
-				"did not find the firmware file '%s' (status %d). You can use <kernel_dir>/scripts/get_dvb_firmware to get the firmware\n",
-				fw_file, ret);
+		if (ret)
 			goto error;
-		}
 
 		/* init */
 		for (i = 0; i < ARRAY_SIZE(tab2); i++) {
Index: linux/drivers/media/i2c/cx25840/cx25840-firmware.c
===================================================================
--- linux.orig/drivers/media/i2c/cx25840/cx25840-firmware.c
+++ linux/drivers/media/i2c/cx25840/cx25840-firmware.c
@@ -113,10 +113,8 @@ int cx25840_loadfw(struct i2c_client *cl
 	if (is_cx231xx(state) && max_buf_size > 16)
 		max_buf_size = 16;
 
-	if (request_firmware(&fw, fwname, FWDEV(client)) != 0) {
-		v4l_err(client, "unable to open firmware %s\n", fwname);
+	if (request_firmware(&fw, fwname, FWDEV(client)) != 0)
 		return -EINVAL;
-	}
 
 	start_fw_load(client);
 
Index: linux/drivers/media/pci/bt8xx/bttv-cards.c
===================================================================
--- linux.orig/drivers/media/pci/bt8xx/bttv-cards.c
+++ linux/drivers/media/pci/bt8xx/bttv-cards.c
@@ -3904,10 +3904,8 @@ static int pvr_boot(struct bttv *btv)
 	int rc;
 
 	rc = request_firmware(&fw_entry, "hcwamc.rbf", &btv->c.pci->dev);
-	if (rc != 0) {
-		pr_warn("%d: no altera firmware [via hotplug]\n", btv->c.nr);
+	if (rc != 0)
 		return rc;
-	}
 	rc = pvr_altera_load(btv, fw_entry->data, fw_entry->size);
 	pr_info("%d: altera firmware upload %s\n",
 		btv->c.nr, (rc < 0) ? "failed" : "ok");
Index: linux/drivers/media/pci/cx18/cx18-av-firmware.c
===================================================================
--- linux.orig/drivers/media/pci/cx18/cx18-av-firmware.c
+++ linux/drivers/media/pci/cx18/cx18-av-firmware.c
@@ -70,10 +70,8 @@ int cx18_av_loadfw(struct cx18 *cx)
 	int i;
 	int retries1 = 0;
 
-	if (request_firmware(&fw, FWFILE, &cx->pci_dev->dev) != 0) {
-		CX18_ERR_DEV(sd, "unable to open firmware %s\n", FWFILE);
+	if (request_firmware(&fw, FWFILE, &cx->pci_dev->dev) != 0)
 		return -EINVAL;
-	}
 
 	/* The firmware load often has byte errors, so allow for several
 	   retries, both at byte level and at the firmware load level. */
Index: linux/drivers/media/pci/cx18/cx18-dvb.c
===================================================================
--- linux.orig/drivers/media/pci/cx18/cx18-dvb.c
+++ linux/drivers/media/pci/cx18/cx18-dvb.c
@@ -127,9 +127,7 @@ static int yuan_mpc718_mt352_reqfw(struc
 	int ret;
 
 	ret = request_firmware(fw, fn, &cx->pci_dev->dev);
-	if (ret)
-		CX18_ERR("Unable to open firmware file %s\n", fn);
-	else {
+	if (!ret) {
 		size_t sz = (*fw)->size;
 		if (sz < 2 || sz > 64 || (sz % 2) != 0) {
 			CX18_ERR("Firmware %s has a bad size: %lu bytes\n",
Index: linux/drivers/media/pci/cx18/cx18-firmware.c
===================================================================
--- linux.orig/drivers/media/pci/cx18/cx18-firmware.c
+++ linux/drivers/media/pci/cx18/cx18-firmware.c
@@ -92,11 +92,8 @@ static int load_cpu_fw_direct(const char
 	u32 __iomem *dst = (u32 __iomem *)mem;
 	const u32 *src;
 
-	if (request_firmware(&fw, fn, &cx->pci_dev->dev)) {
-		CX18_ERR("Unable to open firmware %s\n", fn);
-		CX18_ERR("Did you put the firmware in the hotplug firmware directory?\n");
+	if (request_firmware(&fw, fn, &cx->pci_dev->dev))
 		return -ENOMEM;
-	}
 
 	src = (const u32 *)fw->data;
 
@@ -137,8 +134,6 @@ static int load_apu_fw_direct(const char
 	int sz;
 
 	if (request_firmware(&fw, fn, &cx->pci_dev->dev)) {
-		CX18_ERR("unable to open firmware %s\n", fn);
-		CX18_ERR("did you put the firmware in the hotplug firmware directory?\n");
 		cx18_setup_page(cx, 0);
 		return -ENOMEM;
 	}
Index: linux/drivers/media/pci/cx23885/cx23885-417.c
===================================================================
--- linux.orig/drivers/media/pci/cx23885/cx23885-417.c
+++ linux/drivers/media/pci/cx23885/cx23885-417.c
@@ -920,12 +920,8 @@ static int cx23885_load_firmware(struct
 	retval = request_firmware(&firmware, CX23885_FIRM_IMAGE_NAME,
 				  &dev->pci->dev);
 
-	if (retval != 0) {
-		pr_err("ERROR: Hotplug firmware request failed (%s).\n",
-		       CX23885_FIRM_IMAGE_NAME);
-		pr_err("Please fix your hotplug setup, the board will not work without firmware loaded!\n");
+	if (retval != 0)
 		return -1;
-	}
 
 	if (firmware->size != CX23885_FIRM_IMAGE_SIZE) {
 		pr_err("ERROR: Firmware size mismatch (have %zu, expected %d)\n",
Index: linux/drivers/media/pci/cx23885/cx23885-cards.c
===================================================================
--- linux.orig/drivers/media/pci/cx23885/cx23885-cards.c
+++ linux/drivers/media/pci/cx23885/cx23885-cards.c
@@ -2480,10 +2480,7 @@ void cx23885_card_setup(struct cx23885_d
 			cinfo.rev, filename);
 
 		ret = request_firmware(&fw, filename, &dev->pci->dev);
-		if (ret != 0)
-			pr_err("did not find the firmware file '%s'. You can use <kernel_dir>/scripts/get_dvb_firmware to get the firmware.",
-			       filename);
-		else
+		if (ret == 0)
 			altera_init(&netup_config, fw);
 
 		release_firmware(fw);
Index: linux/drivers/media/pci/cx88/cx88-blackbird.c
===================================================================
--- linux.orig/drivers/media/pci/cx88/cx88-blackbird.c
+++ linux/drivers/media/pci/cx88/cx88-blackbird.c
@@ -462,12 +462,8 @@ static int blackbird_load_firmware(struc
 	retval = request_firmware(&firmware, CX2341X_FIRM_ENC_FILENAME,
 				  &dev->pci->dev);
 
-	if (retval != 0) {
-		pr_err("Hotplug firmware request failed (%s).\n",
-		       CX2341X_FIRM_ENC_FILENAME);
-		pr_err("Please fix your hotplug setup, the board will not work without firmware loaded!\n");
+	if (retval != 0)
 		return -EIO;
-	}
 
 	if (firmware->size != BLACKBIRD_FIRM_IMAGE_SIZE) {
 		pr_err("Firmware size mismatch (have %zd, expected %d)\n",
Index: linux/drivers/media/pci/ivtv/ivtv-firmware.c
===================================================================
--- linux.orig/drivers/media/pci/ivtv/ivtv-firmware.c
+++ linux/drivers/media/pci/ivtv/ivtv-firmware.c
@@ -68,8 +68,6 @@ retry:
 		release_firmware(fw);
 		return size;
 	}
-	IVTV_ERR("Unable to open firmware %s (must be %ld bytes)\n", fn, size);
-	IVTV_ERR("Did you put the firmware in the hotplug firmware directory?\n");
 	return -ENOMEM;
 }
 
Index: linux/drivers/media/pci/ngene/ngene-core.c
===================================================================
--- linux.orig/drivers/media/pci/ngene/ngene-core.c
+++ linux/drivers/media/pci/ngene/ngene-core.c
@@ -1236,19 +1236,14 @@ static int ngene_load_firm(struct ngene
 		break;
 	}
 
-	if (request_firmware(&fw, fw_name, &dev->pci_dev->dev) < 0) {
-		dev_err(pdev, "Could not load firmware file %s.\n", fw_name);
-		dev_info(pdev, "Copy %s to your hotplug directory!\n",
-			 fw_name);
+	if (request_firmware(&fw, fw_name, &dev->pci_dev->dev))
 		return -1;
-	}
 	if (size == 0)
 		size = fw->size;
 	if (size != fw->size) {
 		dev_err(pdev, "Firmware %s has invalid size!", fw_name);
 		err = -1;
 	} else {
-		dev_info(pdev, "Loading firmware file %s.\n", fw_name);
 		ngene_fw = (u8 *) fw->data;
 		err = ngene_command_load_firmware(dev, ngene_fw, size);
 	}
Index: linux/drivers/media/pci/saa7164/saa7164-fw.c
===================================================================
--- linux.orig/drivers/media/pci/saa7164/saa7164-fw.c
+++ linux/drivers/media/pci/saa7164/saa7164-fw.c
@@ -406,11 +406,8 @@ int saa7164_downloadfirmware(struct saa7
 			__func__, fwname);
 
 		ret = request_firmware(&fw, fwname, &dev->pci->dev);
-		if (ret) {
-			printk(KERN_ERR "%s() Upload failed. (file not found?)\n",
-			       __func__);
+		if (ret)
 			return -ENOMEM;
-		}
 
 		printk(KERN_INFO "%s() firmware read %zu bytes.\n",
 			__func__, fw->size);
Index: linux/drivers/media/platform/s5p-mfc/s5p_mfc_ctrl.c
===================================================================
--- linux.orig/drivers/media/platform/s5p-mfc/s5p_mfc_ctrl.c
+++ linux/drivers/media/platform/s5p-mfc/s5p_mfc_ctrl.c
@@ -65,10 +65,8 @@ int s5p_mfc_load_firmware(struct s5p_mfc
 		}
 	}
 
-	if (err != 0) {
-		mfc_err("Firmware is not present in the /lib/firmware directory nor compiled in kernel\n");
+	if (err != 0)
 		return -EINVAL;
-	}
 	if (fw_blob->size > dev->fw_buf.size) {
 		mfc_err("MFC firmware is too big to be loaded\n");
 		release_firmware(fw_blob);
Index: linux/drivers/media/radio/radio-wl1273.c
===================================================================
--- linux.orig/drivers/media/radio/radio-wl1273.c
+++ linux/drivers/media/radio/radio-wl1273.c
@@ -502,11 +502,8 @@ static int wl1273_fm_upload_firmware_pat
 	 * Uploading the firmware patch is not always necessary,
 	 * so we only print an info message.
 	 */
-	if (request_firmware(&fw_p, fw_name, dev)) {
-		dev_info(dev, "%s - %s not found\n", __func__, fw_name);
-
+	if (request_firmware(&fw_p, fw_name, dev))
 		return 0;
-	}
 
 	ptr = (__u8 *) fw_p->data;
 	packet_num = ptr[0];
Index: linux/drivers/media/radio/wl128x/fmdrv_common.c
===================================================================
--- linux.orig/drivers/media/radio/wl128x/fmdrv_common.c
+++ linux/drivers/media/radio/wl128x/fmdrv_common.c
@@ -1240,10 +1240,8 @@ static int fm_download_firmware(struct f
 
 	ret = request_firmware(&fw_entry, fw_name,
 				&fmdev->radio_dev->dev);
-	if (ret < 0) {
-		fmerr("Unable to read firmware(%s) content\n", fw_name);
+	if (ret)
 		return ret;
-	}
 	fmdbg("Firmware(%s) length : %zu bytes\n", fw_name, fw_entry->size);
 
 	fw_data = (void *)fw_entry->data;
Index: linux/drivers/media/tuners/tuner-xc2028.c
===================================================================
--- linux.orig/drivers/media/tuners/tuner-xc2028.c
+++ linux/drivers/media/tuners/tuner-xc2028.c
@@ -1366,7 +1366,6 @@ static void load_firmware_cb(const struc
 
 	tuner_dbg("request_firmware_nowait(): %s\n", fw ? "OK" : "error");
 	if (!fw) {
-		tuner_err("Could not load firmware %s.\n", priv->fname);
 		priv->state = XC2028_NODEV;
 		return;
 	}
Index: linux/drivers/media/usb/cpia2/cpia2_core.c
===================================================================
--- linux.orig/drivers/media/usb/cpia2/cpia2_core.c
+++ linux/drivers/media/usb/cpia2/cpia2_core.c
@@ -912,11 +912,8 @@ static int apply_vp_patch(struct camera_
 	struct cpia2_command cmd;
 
 	ret = request_firmware(&fw, fw_name, &cam->dev->dev);
-	if (ret) {
-		printk(KERN_ERR "cpia2: failed to load VP patch \"%s\"\n",
-		       fw_name);
+	if (ret)
 		return ret;
-	}
 
 	cmd.req_mode = CAMERAACCESS_TYPE_REPEAT | CAMERAACCESS_VP;
 	cmd.direction = TRANSFER_WRITE;
Index: linux/drivers/media/usb/cx231xx/cx231xx-417.c
===================================================================
--- linux.orig/drivers/media/usb/cx231xx/cx231xx-417.c
+++ linux/drivers/media/usb/cx231xx/cx231xx-417.c
@@ -983,11 +983,6 @@ static int cx231xx_load_firmware(struct
 				  dev->dev);
 
 	if (retval != 0) {
-		dev_err(dev->dev,
-			"ERROR: Hotplug firmware request failed (%s).\n",
-			CX231xx_FIRM_IMAGE_NAME);
-		dev_err(dev->dev,
-			"Please fix your hotplug setup, the board will not work without firmware loaded!\n");
 		vfree(p_current_fw);
 		vfree(p_buffer);
 		return retval;
Index: linux/drivers/media/usb/dvb-usb/dib0700_devices.c
===================================================================
--- linux.orig/drivers/media/usb/dvb-usb/dib0700_devices.c
+++ linux/drivers/media/usb/dvb-usb/dib0700_devices.c
@@ -2408,12 +2408,9 @@ static int stk9090m_frontend_attach(stru
 
 	dib9000_i2c_enumeration(&adap->dev->i2c_adap, 1, 0x10, 0x80);
 
-	if (request_firmware(&state->frontend_firmware, "dib9090.fw", &adap->dev->udev->dev)) {
-		deb_info("%s: Upload failed. (file not found?)\n", __func__);
+	if (request_firmware(&state->frontend_firmware, "dib9090.fw", &adap->dev->udev->dev))
 		return -ENODEV;
-	} else {
-		deb_info("%s: firmware read %zu bytes.\n", __func__, state->frontend_firmware->size);
-	}
+	deb_info("%s: firmware read %zu bytes.\n", __func__, state->frontend_firmware->size);
 	stk9090m_config.microcode_B_fe_size = state->frontend_firmware->size;
 	stk9090m_config.microcode_B_fe_buffer = state->frontend_firmware->data;
 
@@ -2478,12 +2475,9 @@ static int nim9090md_frontend_attach(str
 	msleep(20);
 	dib0700_set_gpio(adap->dev, GPIO0, GPIO_OUT, 1);
 
-	if (request_firmware(&state->frontend_firmware, "dib9090.fw", &adap->dev->udev->dev)) {
-		deb_info("%s: Upload failed. (file not found?)\n", __func__);
+	if (request_firmware(&state->frontend_firmware, "dib9090.fw", &adap->dev->udev->dev))
 		return -EIO;
-	} else {
-		deb_info("%s: firmware read %zu bytes.\n", __func__, state->frontend_firmware->size);
-	}
+	deb_info("%s: firmware read %zu bytes.\n", __func__, state->frontend_firmware->size);
 	nim9090md_config[0].microcode_B_fe_size = state->frontend_firmware->size;
 	nim9090md_config[0].microcode_B_fe_buffer = state->frontend_firmware->data;
 	nim9090md_config[1].microcode_B_fe_size = state->frontend_firmware->size;
Index: linux/drivers/media/usb/dvb-usb/dvb-usb-firmware.c
===================================================================
--- linux.orig/drivers/media/usb/dvb-usb/dvb-usb-firmware.c
+++ linux/drivers/media/usb/dvb-usb/dvb-usb-firmware.c
@@ -90,13 +90,9 @@ int dvb_usb_download_firmware(struct usb
 	int ret;
 	const struct firmware *fw = NULL;
 
-	if ((ret = request_firmware(&fw, props->firmware, &udev->dev)) != 0) {
-		err("did not find the firmware file '%s' (status %d). You can use <kernel_dir>/scripts/get_dvb_firmware to get the firmware",
-			props->firmware,ret);
+	ret = request_firmware(&fw, props->firmware, &udev->dev);
+	if (ret)
 		return ret;
-	}
-
-	info("downloading firmware from file '%s'",props->firmware);
 
 	switch (props->usb_ctrl) {
 		case CYPRESS_AN2135:
Index: linux/drivers/media/usb/dvb-usb/gp8psk.c
===================================================================
--- linux.orig/drivers/media/usb/dvb-usb/gp8psk.c
+++ linux/drivers/media/usb/dvb-usb/gp8psk.c
@@ -131,19 +131,14 @@ static int gp8psk_load_bcm4500fw(struct
 	const u8 *ptr;
 	u8 *buf;
 	if ((ret = request_firmware(&fw, bcm4500_firmware,
-					&d->udev->dev)) != 0) {
-		err("did not find the bcm4500 firmware file '%s' (status %d). You can use <kernel_dir>/scripts/get_dvb_firmware to get the firmware",
-			bcm4500_firmware,ret);
+					&d->udev->dev)) != 0)
 		return ret;
-	}
 
 	ret = -EINVAL;
 
 	if (gp8psk_usb_out_op(d, LOAD_BCM4500,1,0,NULL, 0))
 		goto out_rel_fw;
 
-	info("downloading bcm4500 firmware from file '%s'",bcm4500_firmware);
-
 	ptr = fw->data;
 	buf = kmalloc(64, GFP_KERNEL);
 	if (!buf) {
Index: linux/drivers/media/usb/dvb-usb/opera1.c
===================================================================
--- linux.orig/drivers/media/usb/dvb-usb/opera1.c
+++ linux/drivers/media/usb/dvb-usb/opera1.c
@@ -450,8 +450,6 @@ static int opera1_xilinx_load_firmware(s
 	info("start downloading fpga firmware %s",filename);
 
 	if ((ret = request_firmware(&fw, filename, &dev->dev)) != 0) {
-		err("did not find the firmware file '%s'. You can use <kernel_dir>/scripts/get_dvb_firmware to get the firmware",
-			filename);
 		return ret;
 	} else {
 		p = kmalloc(fw->size, GFP_KERNEL);
Index: linux/drivers/media/usb/go7007/go7007-driver.c
===================================================================
--- linux.orig/drivers/media/usb/go7007/go7007-driver.c
+++ linux/drivers/media/usb/go7007/go7007-driver.c
@@ -84,10 +84,8 @@ static int go7007_load_encoder(struct go
 	u16 intr_val, intr_data;
 
 	if (go->boot_fw == NULL) {
-		if (request_firmware(&fw_entry, fw_name, go->dev)) {
-			v4l2_err(go, "unable to load firmware from file \"%s\"\n", fw_name);
+		if (request_firmware(&fw_entry, fw_name, go->dev))
 			return -1;
-		}
 		if (fw_entry->size < 16 || memcmp(fw_entry->data, "WISGO7007FW", 11)) {
 			v4l2_err(go, "file \"%s\" does not appear to be go7007 firmware\n", fw_name);
 			release_firmware(fw_entry);
Index: linux/drivers/media/usb/go7007/go7007-fw.c
===================================================================
--- linux.orig/drivers/media/usb/go7007/go7007-fw.c
+++ linux/drivers/media/usb/go7007/go7007-fw.c
@@ -1565,12 +1565,8 @@ int go7007_construct_fw_image(struct go7
 	default:
 		return -1;
 	}
-	if (request_firmware(&fw_entry, GO7007_FW_NAME, go->dev)) {
-		dev_err(go->dev,
-			"unable to load firmware from file \"%s\"\n",
-			GO7007_FW_NAME);
+	if (request_firmware(&fw_entry, GO7007_FW_NAME, go->dev))
 		return -1;
-	}
 	code = kcalloc(codespace, 2, GFP_KERNEL);
 	if (code == NULL)
 		goto fw_failed;
Index: linux/drivers/media/usb/go7007/go7007-loader.c
===================================================================
--- linux.orig/drivers/media/usb/go7007/go7007-loader.c
+++ linux/drivers/media/usb/go7007/go7007-loader.c
@@ -67,11 +67,8 @@ static int go7007_loader_probe(struct us
 
 	dev_info(&interface->dev, "loading firmware %s\n", fw1);
 
-	if (request_firmware(&fw, fw1, &usbdev->dev)) {
-		dev_err(&interface->dev,
-			"unable to load firmware from file \"%s\"\n", fw1);
+	if (request_firmware(&fw, fw1, &usbdev->dev))
 		goto failed2;
-	}
 	ret = cypress_load_firmware(usbdev, fw, CYPRESS_FX2);
 	release_firmware(fw);
 	if (0 != ret) {
@@ -82,11 +79,8 @@ static int go7007_loader_probe(struct us
 	if (fw2 == NULL)
 		return 0;
 
-	if (request_firmware(&fw, fw2, &usbdev->dev)) {
-		dev_err(&interface->dev,
-			"unable to load firmware from file \"%s\"\n", fw2);
+	if (request_firmware(&fw, fw2, &usbdev->dev))
 		goto failed2;
-	}
 	ret = cypress_load_firmware(usbdev, fw, CYPRESS_FX2);
 	release_firmware(fw);
 	if (0 != ret) {
Index: linux/drivers/media/usb/gspca/vicam.c
===================================================================
--- linux.orig/drivers/media/usb/gspca/vicam.c
+++ linux/drivers/media/usb/gspca/vicam.c
@@ -230,10 +230,8 @@ static int sd_init(struct gspca_dev *gsp
 
 	ret = request_ihex_firmware(&fw, VICAM_FIRMWARE,
 				    &gspca_dev->dev->dev);
-	if (ret) {
-		pr_err("Failed to load \"vicam/firmware.fw\": %d\n", ret);
+	if (ret)
 		return ret;
-	}
 
 	firmware_buf = kmalloc(PAGE_SIZE, GFP_KERNEL);
 	if (!firmware_buf) {
Index: linux/drivers/media/usb/pvrusb2/pvrusb2-hdw.c
===================================================================
--- linux.orig/drivers/media/usb/pvrusb2/pvrusb2-hdw.c
+++ linux/drivers/media/usb/pvrusb2/pvrusb2-hdw.c
@@ -1370,25 +1370,6 @@ static int pvr2_locate_firmware(struct p
 			   "request_firmware fatal error with code=%d",ret);
 		return ret;
 	}
-	pvr2_trace(PVR2_TRACE_ERROR_LEGS,
-		   "***WARNING*** Device %s firmware seems to be missing.",
-		   fwtypename);
-	pvr2_trace(PVR2_TRACE_ERROR_LEGS,
-		   "Did you install the pvrusb2 firmware files in their proper location?");
-	if (fwcount == 1) {
-		pvr2_trace(PVR2_TRACE_ERROR_LEGS,
-			   "request_firmware unable to locate %s file %s",
-			   fwtypename,fwnames[0]);
-	} else {
-		pvr2_trace(PVR2_TRACE_ERROR_LEGS,
-			   "request_firmware unable to locate one of the following %s files:",
-			   fwtypename);
-		for (idx = 0; idx < fwcount; idx++) {
-			pvr2_trace(PVR2_TRACE_ERROR_LEGS,
-				   "request_firmware: Failed to find %s",
-				   fwnames[idx]);
-		}
-	}
 	return ret;
 }
 
Index: linux/drivers/media/usb/s2255/s2255drv.c
===================================================================
--- linux.orig/drivers/media/usb/s2255/s2255drv.c
+++ linux/drivers/media/usb/s2255/s2255drv.c
@@ -2276,10 +2276,8 @@ static int s2255_probe(struct usb_interf
 	}
 	/* load the first chunk */
 	if (request_firmware(&dev->fw_data->fw,
-			     FIRMWARE_FILE_NAME, &dev->udev->dev)) {
-		dev_err(&interface->dev, "sensoray 2255 failed to get firmware\n");
+			     FIRMWARE_FILE_NAME, &dev->udev->dev))
 		goto errorREQFW;
-	}
 	/* check the firmware is valid */
 	fw_size = dev->fw_data->fw->size;
 	pdata = (__le32 *) &dev->fw_data->fw->data[fw_size - 8];
Index: linux/drivers/media/usb/ttusb-budget/dvb-ttusb-budget.c
===================================================================
--- linux.orig/drivers/media/usb/ttusb-budget/dvb-ttusb-budget.c
+++ linux/drivers/media/usb/ttusb-budget/dvb-ttusb-budget.c
@@ -282,10 +282,8 @@ static int ttusb_boot_dsp(struct ttusb *
 
 	err = request_firmware(&fw, "ttusb-budget/dspbootcode.bin",
 			       &ttusb->dev->dev);
-	if (err) {
-		pr_err("failed to request firmware\n");
+	if (err)
 		return err;
-	}
 
 	/* BootBlock */
 	b[0] = 0xaa;
Index: linux/drivers/media/usb/ttusb-dec/ttusb_dec.c
===================================================================
--- linux.orig/drivers/media/usb/ttusb-dec/ttusb_dec.c
+++ linux/drivers/media/usb/ttusb-dec/ttusb_dec.c
@@ -1317,11 +1317,8 @@ static int ttusb_dec_boot_dsp(struct ttu
 	dprintk("%s\n", __func__);
 
 	result = request_firmware(&fw_entry, dec->firmware_name, &dec->udev->dev);
-	if (result) {
-		printk(KERN_ERR "%s: Firmware (%s) unavailable.\n",
-		       __func__, dec->firmware_name);
+	if (result)
 		return result;
-	}
 
 	firmware = fw_entry->data;
 	firmware_size = fw_entry->size;
Index: linux/drivers/misc/ti-st/st_kim.c
===================================================================
--- linux.orig/drivers/misc/ti-st/st_kim.c
+++ linux/drivers/misc/ti-st/st_kim.c
@@ -295,11 +295,8 @@ static long download_firmware(struct kim
 	    request_firmware(&kim_gdata->fw_entry, bts_scr_name,
 			     &kim_gdata->kim_pdev->dev);
 	if (unlikely((err != 0) || (kim_gdata->fw_entry->data == NULL) ||
-		     (kim_gdata->fw_entry->size == 0))) {
-		pr_err(" request_firmware failed(errno %ld) for %s", err,
-			   bts_scr_name);
+		     (kim_gdata->fw_entry->size == 0)))
 		return -EINVAL;
-	}
 	ptr = (void *)kim_gdata->fw_entry->data;
 	len = kim_gdata->fw_entry->size;
 	/*
Index: linux/drivers/net/can/softing/softing_fw.c
===================================================================
--- linux.orig/drivers/net/can/softing/softing_fw.c
+++ linux/drivers/net/can/softing/softing_fw.c
@@ -226,11 +226,8 @@ int softing_load_app_fw(const char *file
 	int8_t type_end = 0, type_entrypoint = 0;
 
 	ret = request_firmware(&fw, file, &card->pdev->dev);
-	if (ret) {
-		dev_alert(&card->pdev->dev, "request_firmware(%s) got %i\n",
-			file, ret);
+	if (ret)
 		return ret;
-	}
 	dev_dbg(&card->pdev->dev, "firmware(%s) got %lu bytes\n",
 		file, (unsigned long)fw->size);
 	/* parse the firmware */
Index: linux/drivers/net/ethernet/3com/typhoon.c
===================================================================
--- linux.orig/drivers/net/ethernet/3com/typhoon.c
+++ linux/drivers/net/ethernet/3com/typhoon.c
@@ -1282,11 +1282,8 @@ typhoon_request_firmware(struct typhoon
 		return 0;
 
 	err = request_firmware(&typhoon_fw, FIRMWARE_NAME, &tp->pdev->dev);
-	if (err) {
-		netdev_err(tp->dev, "Failed to load firmware \"%s\"\n",
-			   FIRMWARE_NAME);
+	if (err)
 		return err;
-	}
 
 	image_data = typhoon_fw->data;
 	remaining = typhoon_fw->size;
Index: linux/drivers/net/ethernet/adaptec/starfire.c
===================================================================
--- linux.orig/drivers/net/ethernet/adaptec/starfire.c
+++ linux/drivers/net/ethernet/adaptec/starfire.c
@@ -1002,11 +1002,8 @@ static int netdev_open(struct net_device
 #endif /* VLAN_SUPPORT */
 
 	retval = request_firmware(&fw_rx, FIRMWARE_RX, &np->pci_dev->dev);
-	if (retval) {
-		printk(KERN_ERR "starfire: Failed to load firmware \"%s\"\n",
-		       FIRMWARE_RX);
+	if (retval)
 		goto out_init;
-	}
 	if (fw_rx->size % 4) {
 		printk(KERN_ERR "starfire: bogus length %zu in \"%s\"\n",
 		       fw_rx->size, FIRMWARE_RX);
@@ -1014,11 +1011,8 @@ static int netdev_open(struct net_device
 		goto out_rx;
 	}
 	retval = request_firmware(&fw_tx, FIRMWARE_TX, &np->pci_dev->dev);
-	if (retval) {
-		printk(KERN_ERR "starfire: Failed to load firmware \"%s\"\n",
-		       FIRMWARE_TX);
+	if (retval)
 		goto out_rx;
-	}
 	if (fw_tx->size % 4) {
 		printk(KERN_ERR "starfire: bogus length %zu in \"%s\"\n",
 		       fw_tx->size, FIRMWARE_TX);
Index: linux/drivers/net/ethernet/alacritech/slicoss.c
===================================================================
--- linux.orig/drivers/net/ethernet/alacritech/slicoss.c
+++ linux/drivers/net/ethernet/alacritech/slicoss.c
@@ -1051,11 +1051,8 @@ static int slic_load_rcvseq_firmware(str
 	file = (sdev->model == SLIC_MODEL_OASIS) ?  SLIC_RCV_FIRMWARE_OASIS :
 						    SLIC_RCV_FIRMWARE_MOJAVE;
 	err = request_firmware(&fw, file, &sdev->pdev->dev);
-	if (err) {
-		dev_err(&sdev->pdev->dev,
-			"failed to load receive sequencer firmware %s\n", file);
+	if (err)
 		return err;
-	}
 	/* Do an initial sanity check concerning firmware size now. A further
 	 * check follows below.
 	 */
@@ -1126,10 +1123,8 @@ static int slic_load_firmware(struct sli
 	file = (sdev->model == SLIC_MODEL_OASIS) ?  SLIC_FIRMWARE_OASIS :
 						    SLIC_FIRMWARE_MOJAVE;
 	err = request_firmware(&fw, file, &sdev->pdev->dev);
-	if (err) {
-		dev_err(&sdev->pdev->dev, "failed to load firmware %s\n", file);
+	if (err)
 		return err;
-	}
 	/* Do an initial sanity check concerning firmware size now. A further
 	 * check follows below.
 	 */
Index: linux/drivers/net/ethernet/alteon/acenic.c
===================================================================
--- linux.orig/drivers/net/ethernet/alteon/acenic.c
+++ linux/drivers/net/ethernet/alteon/acenic.c
@@ -2881,11 +2881,8 @@ static int ace_load_firmware(struct net_
 		fw_name = "acenic/tg1.bin";
 
 	ret = request_firmware(&fw, fw_name, &ap->pdev->dev);
-	if (ret) {
-		printk(KERN_ERR "%s: Failed to load firmware \"%s\"\n",
-		       ap->name, fw_name);
+	if (ret)
 		return ret;
-	}
 
 	fw_data = (void *)fw->data;
 
Index: linux/drivers/net/ethernet/broadcom/bnx2.c
===================================================================
--- linux.orig/drivers/net/ethernet/broadcom/bnx2.c
+++ linux/drivers/net/ethernet/broadcom/bnx2.c
@@ -3712,16 +3712,13 @@ static int bnx2_request_uncached_firmwar
 	}
 
 	rc = request_firmware(&bp->mips_firmware, mips_fw_file, &bp->pdev->dev);
-	if (rc) {
-		pr_err("Can't load firmware file \"%s\"\n", mips_fw_file);
+	if (rc)
 		goto out;
-	}
 
 	rc = request_firmware(&bp->rv2p_firmware, rv2p_fw_file, &bp->pdev->dev);
-	if (rc) {
-		pr_err("Can't load firmware file \"%s\"\n", rv2p_fw_file);
+	if (rc)
 		goto err_release_mips_firmware;
-	}
+
 	mips_fw = (const struct bnx2_mips_fw_file *) bp->mips_firmware->data;
 	rv2p_fw = (const struct bnx2_rv2p_fw_file *) bp->rv2p_firmware->data;
 	if (bp->mips_firmware->size < sizeof(*mips_fw) ||
Index: linux/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
===================================================================
--- linux.orig/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
+++ linux/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
@@ -13420,11 +13420,8 @@ static int bnx2x_init_firmware(struct bn
 	BNX2X_DEV_INFO("Loading %s\n", fw_file_name);
 
 	rc = request_firmware(&bp->firmware, fw_file_name, &bp->pdev->dev);
-	if (rc) {
-		BNX2X_ERR("Can't load firmware file %s\n",
-			  fw_file_name);
+	if (rc)
 		goto request_firmware_exit;
-	}
 
 	rc = bnx2x_check_firmware(bp);
 	if (rc) {
Index: linux/drivers/net/ethernet/broadcom/tg3.c
===================================================================
--- linux.orig/drivers/net/ethernet/broadcom/tg3.c
+++ linux/drivers/net/ethernet/broadcom/tg3.c
@@ -11404,11 +11404,8 @@ static int tg3_request_firmware(struct t
 {
 	const struct tg3_firmware_hdr *fw_hdr;
 
-	if (request_firmware(&tp->fw, tp->fw_needed, &tp->pdev->dev)) {
-		netdev_err(tp->dev, "Failed to load firmware \"%s\"\n",
-			   tp->fw_needed);
+	if (request_firmware(&tp->fw, tp->fw_needed, &tp->pdev->dev))
 		return -ENOENT;
-	}
 
 	fw_hdr = (struct tg3_firmware_hdr *)tp->fw->data;
 
Index: linux/drivers/net/ethernet/brocade/bna/cna_fwimg.c
===================================================================
--- linux.orig/drivers/net/ethernet/brocade/bna/cna_fwimg.c
+++ linux/drivers/net/ethernet/brocade/bna/cna_fwimg.c
@@ -24,10 +24,8 @@ cna_read_firmware(struct pci_dev *pdev,
 	const struct firmware *fw;
 	u32 n;
 
-	if (request_firmware(&fw, fw_name, &pdev->dev)) {
-		dev_alert(&pdev->dev, "can't load firmware %s\n", fw_name);
+	if (request_firmware(&fw, fw_name, &pdev->dev))
 		goto error;
-	}
 
 	*bfi_image = (u32 *)fw->data;
 	*bfi_image_size = fw->size/sizeof(u32);
Index: linux/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c
===================================================================
--- linux.orig/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c
+++ linux/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c
@@ -1036,12 +1036,8 @@ int t3_get_edc_fw(struct cphy *phy, int
 	fw_name = get_edc_fw_name(edc_idx);
 	if (fw_name)
 		ret = request_firmware(&fw, fw_name, &adapter->pdev->dev);
-	if (ret < 0) {
-		dev_err(&adapter->pdev->dev,
-			"could not upgrade firmware: unable to load %s\n",
-			fw_name);
+	if (ret)
 		return ret;
-	}
 
 	/* check size, take checksum in account */
 	if (fw->size > size + 4) {
@@ -1078,11 +1074,8 @@ static int upgrade_fw(struct adapter *ad
 	struct device *dev = &adap->pdev->dev;
 
 	ret = request_firmware(&fw, FW_FNAME, dev);
-	if (ret < 0) {
-		dev_err(dev, "could not upgrade firmware: unable to load %s\n",
-			FW_FNAME);
+	if (ret)
 		return ret;
-	}
 	ret = t3_load_fw(adap, fw->data, fw->size);
 	release_firmware(fw);
 
@@ -1127,11 +1120,8 @@ static int update_tpsram(struct adapter
 	snprintf(buf, sizeof(buf), TPSRAM_NAME, rev);
 
 	ret = request_firmware(&tpsram, buf, dev);
-	if (ret < 0) {
-		dev_err(dev, "could not load TP SRAM: unable to load %s\n",
-			buf);
+	if (ret)
 		return ret;
-	}
 
 	ret = t3_check_tpsram(adap, tpsram->data, tpsram->size);
 	if (ret)
Index: linux/drivers/net/ethernet/intel/e100.c
===================================================================
--- linux.orig/drivers/net/ethernet/intel/e100.c
+++ linux/drivers/net/ethernet/intel/e100.c
@@ -1262,9 +1262,6 @@ static const struct firmware *e100_reque
 
 	if (err) {
 		if (required) {
-			netif_err(nic, probe, nic->netdev,
-				  "Failed to load firmware \"%s\": %d\n",
-				  fw_name, err);
 			return ERR_PTR(err);
 		} else {
 			netif_info(nic, probe, nic->netdev,
Index: linux/drivers/net/ethernet/myricom/myri10ge/myri10ge.c
===================================================================
--- linux.orig/drivers/net/ethernet/myricom/myri10ge/myri10ge.c
+++ linux/drivers/net/ethernet/myricom/myri10ge/myri10ge.c
@@ -580,8 +580,6 @@ static int myri10ge_load_hotplug_firmwar
 	unsigned i;
 
 	if ((status = request_firmware(&fw, mgp->fw_name, dev)) < 0) {
-		dev_err(dev, "Unable to load %s firmware image via hotplug\n",
-			mgp->fw_name);
 		status = -EINVAL;
 		goto abort_with_nothing;
 	}
Index: linux/drivers/net/ethernet/smsc/smc91c92_cs.c
===================================================================
--- linux.orig/drivers/net/ethernet/smsc/smc91c92_cs.c
+++ linux/drivers/net/ethernet/smsc/smc91c92_cs.c
@@ -647,10 +647,8 @@ static int osi_load_firmware(struct pcmc
 	int i, err;
 
 	err = request_firmware(&fw, FIRMWARE_NAME, &link->dev);
-	if (err) {
-		pr_err("Failed to load firmware \"%s\"\n", FIRMWARE_NAME);
+	if (err)
 		return err;
-	}
 
 	/* Download the Seven of Diamonds firmware */
 	for (i = 0; i < fw->size; i++) {
Index: linux/drivers/net/ethernet/sun/cassini.c
===================================================================
--- linux.orig/drivers/net/ethernet/sun/cassini.c
+++ linux/drivers/net/ethernet/sun/cassini.c
@@ -793,11 +793,8 @@ static void cas_saturn_firmware_init(str
 		return;
 
 	err = request_firmware(&fw, fw_name, &cp->pdev->dev);
-	if (err) {
-		pr_err("Failed to load firmware \"%s\"\n",
-		       fw_name);
+	if (err)
 		return;
-	}
 	if (fw->size < 2) {
 		pr_err("bogus length %zu in \"%s\"\n",
 		       fw->size, fw_name);
Index: linux/drivers/net/hamradio/yam.c
===================================================================
--- linux.orig/drivers/net/hamradio/yam.c
+++ linux/drivers/net/hamradio/yam.c
@@ -357,11 +357,8 @@ static unsigned char *add_mcs(unsigned c
 		}
 		err = request_firmware(&fw, fw_name[predef], &pdev->dev);
 		platform_device_unregister(pdev);
-		if (err) {
-			printk(KERN_ERR "Failed to load firmware \"%s\"\n",
-			       fw_name[predef]);
+		if (err)
 			return NULL;
-		}
 		if (fw->size != YAM_FPGA_SIZE) {
 			printk(KERN_ERR "Bogus length %zu in firmware \"%s\"\n",
 			       fw->size, fw_name[predef]);
Index: linux/drivers/net/usb/kaweth.c
===================================================================
--- linux.orig/drivers/net/usb/kaweth.c
+++ linux/drivers/net/usb/kaweth.c
@@ -305,10 +305,8 @@ static int kaweth_download_firmware(stru
 	int ret;
 
 	ret = request_firmware(&fw, fwname, &kaweth->dev->dev);
-	if (ret) {
-		dev_err(&kaweth->intf->dev, "Firmware request failed\n");
+	if (ret)
 		return ret;
-	}
 
 	if (fw->size > KAWETH_FIRMWARE_BUF_SIZE) {
 		dev_err(&kaweth->intf->dev, "Firmware too big: %zu\n",
Index: linux/drivers/net/wireless/ath/ath9k/hif_usb.c
===================================================================
--- linux.orig/drivers/net/wireless/ath/ath9k/hif_usb.c
+++ linux/drivers/net/wireless/ath/ath9k/hif_usb.c
@@ -1216,9 +1216,6 @@ static void ath9k_hif_usb_firmware_cb(co
 		if (!ret)
 			return;
 
-		dev_err(&hif_dev->udev->dev,
-			"ath9k_htc: Failed to get firmware %s\n",
-			hif_dev->fw_name);
 		goto err_fw;
 	}
 
Index: linux/drivers/net/wireless/ath/carl9170/usb.c
===================================================================
--- linux.orig/drivers/net/wireless/ath/carl9170/usb.c
+++ linux/drivers/net/wireless/ath/carl9170/usb.c
@@ -1029,7 +1029,6 @@ static void carl9170_usb_firmware_step2(
 		return;
 	}
 
-	dev_err(&ar->udev->dev, "firmware not found.\n");
 	carl9170_usb_firmware_failed(ar);
 }
 
Index: linux/drivers/net/wireless/atmel/at76c50x-usb.c
===================================================================
--- linux.orig/drivers/net/wireless/atmel/at76c50x-usb.c
+++ linux/drivers/net/wireless/atmel/at76c50x-usb.c
@@ -1616,13 +1616,8 @@ static struct fwentry *at76_load_firmwar
 
 	at76_dbg(DBG_FW, "downloading firmware %s", fwe->fwname);
 	ret = request_firmware(&fwe->fw, fwe->fwname, &udev->dev);
-	if (ret < 0) {
-		dev_err(&udev->dev, "firmware %s not found!\n",
-			fwe->fwname);
-		dev_err(&udev->dev,
-			"you may need to download the firmware from http://developer.berlios.de/projects/at76c503a/\n");
+	if (ret)
 		goto exit;
-	}
 
 	at76_dbg(DBG_FW, "got it.");
 	fwh = (struct at76_fw_header *)(fwe->fw->data);
Index: linux/drivers/net/wireless/atmel/atmel.c
===================================================================
--- linux.orig/drivers/net/wireless/atmel/atmel.c
+++ linux/drivers/net/wireless/atmel/atmel.c
@@ -3891,12 +3891,8 @@ static int reset_atmel_card(struct net_d
 					strcpy(priv->firmware_id, "atmel_at76c502.bin");
 				}
 				err = request_firmware(&fw_entry, priv->firmware_id, priv->sys_dev);
-				if (err != 0) {
-					printk(KERN_ALERT
-					       "%s: firmware %s is missing, cannot continue.\n",
-					       dev->name, priv->firmware_id);
+				if (err != 0)
 					return err;
-				}
 			} else {
 				int fw_index = 0;
 				int success = 0;
Index: linux/drivers/net/wireless/broadcom/b43/main.c
===================================================================
--- linux.orig/drivers/net/wireless/broadcom/b43/main.c
+++ linux/drivers/net/wireless/broadcom/b43/main.c
@@ -2245,19 +2245,8 @@ int b43_do_request_fw(struct b43_request
 	}
 	err = request_firmware(&ctx->blob, ctx->fwname,
 			       ctx->dev->dev->dev);
-	if (err == -ENOENT) {
-		snprintf(ctx->errors[ctx->req_type],
-			 sizeof(ctx->errors[ctx->req_type]),
-			 "Firmware file \"%s\" not found\n",
-			 ctx->fwname);
+	if (err)
 		return err;
-	} else if (err) {
-		snprintf(ctx->errors[ctx->req_type],
-			 sizeof(ctx->errors[ctx->req_type]),
-			 "Firmware file \"%s\" request failed (err=%d)\n",
-			 ctx->fwname, err);
-		return err;
-	}
 fw_ready:
 	if (ctx->blob->size < sizeof(struct b43_fw_header))
 		goto err_format;
Index: linux/drivers/net/wireless/broadcom/b43legacy/main.c
===================================================================
--- linux.orig/drivers/net/wireless/broadcom/b43legacy/main.c
+++ linux/drivers/net/wireless/broadcom/b43legacy/main.c
@@ -1524,11 +1524,8 @@ static int do_request_fw(struct b43legac
 	} else {
 		err = request_firmware(fw, path, dev->dev->dev);
 	}
-	if (err) {
-		b43legacyerr(dev->wl, "Firmware file \"%s\" not found "
-		       "or load failed.\n", path);
+	if (err)
 		return err;
-	}
 	if ((*fw)->size < sizeof(struct b43legacy_fw_header))
 		goto err_format;
 	hdr = (struct b43legacy_fw_header *)((*fw)->data);
Index: linux/drivers/net/wireless/broadcom/brcm80211/brcmsmac/mac80211_if.c
===================================================================
--- linux.orig/drivers/net/wireless/broadcom/brcm80211/brcmsmac/mac80211_if.c
+++ linux/drivers/net/wireless/broadcom/brcm80211/brcmsmac/mac80211_if.c
@@ -376,19 +376,13 @@ static int brcms_request_fw(struct brcms
 		sprintf(fw_name, "%s-%d.fw", brcms_firmwares[i],
 			UCODE_LOADER_API_VER);
 		status = request_firmware(&wl->fw.fw_bin[i], fw_name, device);
-		if (status) {
-			wiphy_err(wl->wiphy, "%s: fail to load firmware %s\n",
-				  KBUILD_MODNAME, fw_name);
+		if (status)
 			return status;
-		}
 		sprintf(fw_name, "%s_hdr-%d.fw", brcms_firmwares[i],
 			UCODE_LOADER_API_VER);
 		status = request_firmware(&wl->fw.fw_hdr[i], fw_name, device);
-		if (status) {
-			wiphy_err(wl->wiphy, "%s: fail to load firmware %s\n",
-				  KBUILD_MODNAME, fw_name);
+		if (status)
 			return status;
-		}
 		wl->fw.hdr_num_entries[i] =
 		    wl->fw.fw_hdr[i]->size / (sizeof(struct firmware_hdr));
 	}
Index: linux/drivers/net/wireless/intel/ipw2x00/ipw2100.c
===================================================================
--- linux.orig/drivers/net/wireless/intel/ipw2x00/ipw2100.c
+++ linux/drivers/net/wireless/intel/ipw2x00/ipw2100.c
@@ -8370,12 +8370,8 @@ static int ipw2100_get_firmware(struct i
 
 	rc = request_firmware(&fw->fw_entry, fw_name, &priv->pci_dev->dev);
 
-	if (rc < 0) {
-		printk(KERN_ERR DRV_NAME ": "
-		       "%s: Firmware '%s' not available or load failed.\n",
-		       priv->net_dev->name, fw_name);
+	if (rc)
 		return rc;
-	}
 	IPW_DEBUG_INFO("firmware data %p size %zd\n", fw->fw_entry->data,
 		       fw->fw_entry->size);
 
Index: linux/drivers/net/wireless/intel/ipw2x00/ipw2200.c
===================================================================
--- linux.orig/drivers/net/wireless/intel/ipw2x00/ipw2200.c
+++ linux/drivers/net/wireless/intel/ipw2x00/ipw2200.c
@@ -3396,10 +3396,8 @@ static int ipw_get_fw(struct ipw_priv *p
 
 	/* ask firmware_class module to get the boot firmware off disk */
 	rc = request_firmware(raw, name, &priv->pci_dev->dev);
-	if (rc < 0) {
-		IPW_ERROR("%s request_firmware failed: Reason %d\n", name, rc);
+	if (rc)
 		return rc;
-	}
 
 	if ((*raw)->size < sizeof(*fw)) {
 		IPW_ERROR("%s is too small (%zd)\n", name, (*raw)->size);
Index: linux/drivers/net/wireless/intel/iwlegacy/3945-mac.c
===================================================================
--- linux.orig/drivers/net/wireless/intel/iwlegacy/3945-mac.c
+++ linux/drivers/net/wireless/intel/iwlegacy/3945-mac.c
@@ -1835,7 +1835,6 @@ il3945_read_ucode(struct il_priv *il)
 		sprintf(buf, "%s%u%s", name_pre, idx, ".ucode");
 		ret = request_firmware(&ucode_raw, buf, &il->pci_dev->dev);
 		if (ret < 0) {
-			IL_ERR("%s firmware file req failed: %d\n", buf, ret);
 			if (ret == -ENOENT)
 				continue;
 			else
Index: linux/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
===================================================================
--- linux.orig/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
+++ linux/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
@@ -181,8 +181,6 @@ static int iwl_request_firmware(struct i
 	}
 
 	if (drv->fw_index < cfg->ucode_api_min) {
-		IWL_ERR(drv, "no suitable firmware found!\n");
-
 		if (cfg->ucode_api_min == cfg->ucode_api_max) {
 			IWL_ERR(drv, "%s%d is required\n", cfg->fw_name_pre,
 				cfg->ucode_api_max);
Index: linux/drivers/net/wireless/intersil/orinoco/fw.c
===================================================================
--- linux.orig/drivers/net/wireless/intersil/orinoco/fw.c
+++ linux/drivers/net/wireless/intersil/orinoco/fw.c
@@ -132,7 +132,6 @@ orinoco_dl_firmware(struct orinoco_priva
 		err = request_firmware(&fw_entry, firmware, priv->dev);
 
 		if (err) {
-			dev_err(dev, "Cannot find firmware %s\n", firmware);
 			err = -ENOENT;
 			goto free;
 		}
@@ -292,10 +291,8 @@ symbol_dl_firmware(struct orinoco_privat
 	const struct firmware *fw_entry;
 
 	if (!orinoco_cached_fw_get(priv, true)) {
-		if (request_firmware(&fw_entry, fw->pri_fw, priv->dev) != 0) {
-			dev_err(dev, "Cannot find firmware: %s\n", fw->pri_fw);
+		if (request_firmware(&fw_entry, fw->pri_fw, priv->dev) != 0)
 			return -ENOENT;
-		}
 	} else
 		fw_entry = orinoco_cached_fw_get(priv, true);
 
@@ -311,10 +308,8 @@ symbol_dl_firmware(struct orinoco_privat
 	}
 
 	if (!orinoco_cached_fw_get(priv, false)) {
-		if (request_firmware(&fw_entry, fw->sta_fw, priv->dev) != 0) {
-			dev_err(dev, "Cannot find firmware: %s\n", fw->sta_fw);
+		if (request_firmware(&fw_entry, fw->sta_fw, priv->dev) != 0)
 			return -ENOENT;
-		}
 	} else
 		fw_entry = orinoco_cached_fw_get(priv, false);
 
Index: linux/drivers/net/wireless/intersil/orinoco/orinoco_usb.c
===================================================================
--- linux.orig/drivers/net/wireless/intersil/orinoco/orinoco_usb.c
+++ linux/drivers/net/wireless/intersil/orinoco/orinoco_usb.c
@@ -1708,7 +1708,6 @@ static int ezusb_probe(struct usb_interf
 		if (ezusb_firmware_download(upriv, &firmware) < 0)
 			goto error;
 	} else {
-		err("No firmware to download");
 		goto error;
 	}
 
Index: linux/drivers/net/wireless/intersil/p54/p54pci.c
===================================================================
--- linux.orig/drivers/net/wireless/intersil/p54/p54pci.c
+++ linux/drivers/net/wireless/intersil/p54/p54pci.c
@@ -502,7 +502,6 @@ static void p54p_firmware_step2(const st
 	int err;
 
 	if (!fw) {
-		dev_err(&pdev->dev, "Cannot find firmware (isl3886pci)\n");
 		err = -ENOENT;
 		goto out;
 	}
Index: linux/drivers/net/wireless/intersil/p54/p54spi.c
===================================================================
--- linux.orig/drivers/net/wireless/intersil/p54/p54spi.c
+++ linux/drivers/net/wireless/intersil/p54/p54spi.c
@@ -157,10 +157,8 @@ static int p54spi_request_firmware(struc
 	/* FIXME: should driver use it's own struct device? */
 	ret = request_firmware(&priv->firmware, "3826.arm", &priv->spi->dev);
 
-	if (ret < 0) {
-		dev_err(&priv->spi->dev, "request_firmware() failed: %d", ret);
+	if (ret)
 		return ret;
-	}
 
 	ret = p54_parse_firmware(dev, priv->firmware);
 	if (ret) {
Index: linux/drivers/net/wireless/intersil/p54/p54usb.c
===================================================================
--- linux.orig/drivers/net/wireless/intersil/p54/p54usb.c
+++ linux/drivers/net/wireless/intersil/p54/p54usb.c
@@ -929,7 +929,6 @@ static void p54u_load_firmware_cb(const
 		err = p54u_start_ops(priv);
 	} else {
 		err = -ENOENT;
-		dev_err(&udev->dev, "Firmware not found.\n");
 	}
 
 	complete(&priv->fw_wait_load);
Index: linux/drivers/net/wireless/marvell/libertas_tf/if_usb.c
===================================================================
--- linux.orig/drivers/net/wireless/marvell/libertas_tf/if_usb.c
+++ linux/drivers/net/wireless/marvell/libertas_tf/if_usb.c
@@ -818,8 +818,6 @@ static int if_usb_prog_firmware(struct l
 	kernel_param_lock(THIS_MODULE);
 	ret = request_firmware(&cardp->fw, lbtf_fw_name, &cardp->udev->dev);
 	if (ret < 0) {
-		pr_err("request_firmware() failed with %#x\n", ret);
-		pr_err("firmware %s not found\n", lbtf_fw_name);
 		kernel_param_unlock(THIS_MODULE);
 		goto done;
 	}
Index: linux/drivers/net/wireless/marvell/mwifiex/main.c
===================================================================
--- linux.orig/drivers/net/wireless/marvell/mwifiex/main.c
+++ linux/drivers/net/wireless/marvell/mwifiex/main.c
@@ -527,11 +527,8 @@ static int _mwifiex_fw_dpc(const struct
 	struct wireless_dev *wdev;
 	struct completion *fw_done = adapter->fw_done;
 
-	if (!firmware) {
-		mwifiex_dbg(adapter, ERROR,
-			    "Failed to get firmware %s\n", adapter->fw_name);
+	if (!firmware)
 		goto err_dnld_fw;
-	}
 
 	memset(&fw, 0, sizeof(struct mwifiex_fw_image));
 	adapter->firmware = firmware;
Index: linux/drivers/net/wireless/marvell/mwl8k.c
===================================================================
--- linux.orig/drivers/net/wireless/marvell/mwl8k.c
+++ linux/drivers/net/wireless/marvell/mwl8k.c
@@ -5732,16 +5732,12 @@ static int mwl8k_firmware_load_success(s
 static void mwl8k_fw_state_machine(const struct firmware *fw, void *context)
 {
 	struct mwl8k_priv *priv = context;
-	struct mwl8k_device_info *di = priv->device_info;
 	int rc;
 
 	switch (priv->fw_state) {
 	case FW_STATE_INIT:
-		if (!fw) {
-			printk(KERN_ERR "%s: Error requesting helper fw %s\n",
-			       pci_name(priv->pdev), di->helper_image);
+		if (!fw)
 			goto fail;
-		}
 		priv->fw_helper = fw;
 		rc = mwl8k_request_fw(priv, priv->fw_pref, &priv->fw_ucode,
 				      true);
@@ -5776,11 +5772,8 @@ static void mwl8k_fw_state_machine(const
 		break;
 
 	case FW_STATE_LOADING_ALT:
-		if (!fw) {
-			printk(KERN_ERR "%s: Error requesting alt fw %s\n",
-			       pci_name(priv->pdev), di->helper_image);
+		if (!fw)
 			goto fail;
-		}
 		priv->fw_ucode = fw;
 		rc = mwl8k_firmware_load_success(priv);
 		if (rc)
@@ -5818,10 +5811,8 @@ retry:
 
 	/* Ask userland hotplug daemon for the device firmware */
 	rc = mwl8k_request_firmware(priv, fw_image, nowait);
-	if (rc) {
-		wiphy_err(hw->wiphy, "Firmware files not found\n");
+	if (rc)
 		return rc;
-	}
 
 	if (nowait)
 		return rc;
Index: linux/drivers/net/wireless/ralink/rt2x00/rt2x00firmware.c
===================================================================
--- linux.orig/drivers/net/wireless/ralink/rt2x00/rt2x00firmware.c
+++ linux/drivers/net/wireless/ralink/rt2x00/rt2x00firmware.c
@@ -38,10 +38,8 @@ static int rt2x00lib_request_firmware(st
 	rt2x00_info(rt2x00dev, "Loading firmware file '%s'\n", fw_name);
 
 	retval = request_firmware(&fw, fw_name, device);
-	if (retval) {
-		rt2x00_err(rt2x00dev, "Failed to request Firmware\n");
+	if (retval)
 		return retval;
-	}
 
 	if (!fw || !fw->size || !fw->data) {
 		rt2x00_err(rt2x00dev, "Failed to read Firmware\n");
Index: linux/drivers/net/wireless/realtek/rtlwifi/core.c
===================================================================
--- linux.orig/drivers/net/wireless/realtek/rtlwifi/core.c
+++ linux/drivers/net/wireless/realtek/rtlwifi/core.c
@@ -88,7 +88,6 @@ static void rtl_fw_do_work(const struct
 			if (!err)
 				goto found_alt;
 		}
-		pr_err("Selected firmware is not available\n");
 		rtlpriv->max_fw_size = 0;
 		goto exit;
 	}
Index: linux/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c
===================================================================
--- linux.orig/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c
+++ linux/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c
@@ -63,13 +63,11 @@ static void rtl92se_fw_cb(const struct f
 	struct ieee80211_hw *hw = context;
 	struct rtl_priv *rtlpriv = rtl_priv(hw);
 	struct rt_firmware *pfirmware = NULL;
-	char *fw_name = "rtlwifi/rtl8192sefw.bin";
 
 	rtl_dbg(rtlpriv, COMP_ERR, DBG_LOUD,
 		"Firmware callback routine entered!\n");
 	complete(&rtlpriv->firmware_loading_complete);
 	if (!firmware) {
-		pr_err("Firmware %s not available\n", fw_name);
 		rtlpriv->max_fw_size = 0;
 		return;
 	}
Index: linux/drivers/net/wireless/ti/wl1251/main.c
===================================================================
--- linux.orig/drivers/net/wireless/ti/wl1251/main.c
+++ linux/drivers/net/wireless/ti/wl1251/main.c
@@ -57,10 +57,8 @@ static int wl1251_fetch_firmware(struct
 
 	ret = request_firmware(&fw, WL1251_FW_NAME, dev);
 
-	if (ret < 0) {
-		wl1251_error("could not get firmware: %d", ret);
+	if (ret)
 		return ret;
-	}
 
 	if (fw->size % 4) {
 		wl1251_error("firmware size is not multiple of 32 bits: %zu",
@@ -96,10 +94,8 @@ static int wl1251_fetch_nvs(struct wl125
 
 	ret = request_firmware(&fw, WL1251_NVS_NAME, dev);
 
-	if (ret < 0) {
-		wl1251_error("could not get nvs file: %d", ret);
+	if (ret)
 		return ret;
-	}
 
 	if (fw->size % 4) {
 		wl1251_error("nvs size is not multiple of 32 bits: %zu",
Index: linux/drivers/net/wireless/ti/wlcore/main.c
===================================================================
--- linux.orig/drivers/net/wireless/ti/wlcore/main.c
+++ linux/drivers/net/wireless/ti/wlcore/main.c
@@ -764,10 +764,8 @@ static int wl12xx_fetch_firmware(struct
 
 	ret = request_firmware(&fw, fw_name, wl->dev);
 
-	if (ret < 0) {
-		wl1271_error("could not get firmware %s: %d", fw_name, ret);
+	if (ret)
 		return ret;
-	}
 
 	if (fw->size % 4) {
 		wl1271_error("firmware size is not multiple of 32 bits: %zu",
Index: linux/drivers/net/wireless/zydas/zd1201.c
===================================================================
--- linux.orig/drivers/net/wireless/zydas/zd1201.c
+++ linux/drivers/net/wireless/zydas/zd1201.c
@@ -62,8 +62,6 @@ static int zd1201_fw_upload(struct usb_d
 
 	err = request_firmware(&fw_entry, fwfile, &dev->dev);
 	if (err) {
-		dev_err(&dev->dev, "Failed to load %s firmware file!\n", fwfile);
-		dev_err(&dev->dev, "Make sure the hotplug firmware loader is installed.\n");
 		dev_err(&dev->dev, "Goto http://linux-lc100020.sourceforge.net for more info.\n");
 		return err;
 	}
Index: linux/drivers/net/wireless/zydas/zd1211rw/zd_usb.c
===================================================================
--- linux.orig/drivers/net/wireless/zydas/zd1211rw/zd_usb.c
+++ linux/drivers/net/wireless/zydas/zd1211rw/zd_usb.c
@@ -108,16 +108,9 @@ static void int_urb_complete(struct urb
 static int request_fw_file(
 	const struct firmware **fw, const char *name, struct device *device)
 {
-	int r;
-
 	dev_dbg_f(device, "fw name %s\n", name);
 
-	r = request_firmware(fw, name, device);
-	if (r)
-		dev_err(device,
-		       "Could not load firmware file %s. Error number %d\n",
-		       name, r);
-	return r;
+	return request_firmware(fw, name, device);
 }
 
 static inline u16 get_bcdDevice(const struct usb_device *udev)
Index: linux/drivers/scsi/advansys.c
===================================================================
--- linux.orig/drivers/scsi/advansys.c
+++ linux/drivers/scsi/advansys.c
@@ -4045,8 +4045,6 @@ static int AscInitAsc1000Driver(ASC_DVC_
 
 	err = request_firmware(&fw, fwname, asc_dvc->drv_ptr->dev);
 	if (err) {
-		printk(KERN_ERR "Failed to load image \"%s\" err %d\n",
-		       fwname, err);
 		asc_dvc->err_code |= ASC_IERR_MCODE_CHKSUM;
 		return err;
 	}
@@ -4411,8 +4409,6 @@ static int AdvInitAsc3550Driver(ADV_DVC_
 
 	err = request_firmware(&fw, fwname, asc_dvc->drv_ptr->dev);
 	if (err) {
-		printk(KERN_ERR "Failed to load image \"%s\" err %d\n",
-		       fwname, err);
 		asc_dvc->err_code = ASC_IERR_MCODE_CHKSUM;
 		return err;
 	}
@@ -4911,8 +4907,6 @@ static int AdvInitAsc38C0800Driver(ADV_D
 
 	err = request_firmware(&fw, fwname, asc_dvc->drv_ptr->dev);
 	if (err) {
-		printk(KERN_ERR "Failed to load image \"%s\" err %d\n",
-		       fwname, err);
 		asc_dvc->err_code = ASC_IERR_MCODE_CHKSUM;
 		return err;
 	}
@@ -5399,8 +5393,6 @@ static int AdvInitAsc38C1600Driver(ADV_D
 
 	err = request_firmware(&fw, fwname, asc_dvc->drv_ptr->dev);
 	if (err) {
-		printk(KERN_ERR "Failed to load image \"%s\" err %d\n",
-		       fwname, err);
 		asc_dvc->err_code = ASC_IERR_MCODE_CHKSUM;
 		return err;
 	}
Index: linux/drivers/scsi/aic94xx/aic94xx_init.c
===================================================================
--- linux.orig/drivers/scsi/aic94xx/aic94xx_init.c
+++ linux/drivers/scsi/aic94xx/aic94xx_init.c
@@ -370,8 +370,6 @@ static ssize_t asd_store_update_bios(str
 				   filename_ptr,
 				   &asd_ha->pcidev->dev);
 	if (err) {
-		asd_printk("Failed to load bios image file %s, error %d\n",
-			   filename_ptr, err);
 		err = FAIL_OPEN_BIOS_FILE;
 		goto out1;
 	}
Index: linux/drivers/scsi/aic94xx/aic94xx_seq.c
===================================================================
--- linux.orig/drivers/scsi/aic94xx/aic94xx_seq.c
+++ linux/drivers/scsi/aic94xx/aic94xx_seq.c
@@ -1302,11 +1302,8 @@ int asd_init_seqs(struct asd_ha_struct *
 
 	err = asd_request_firmware(asd_ha);
 
-	if (err) {
-		asd_printk("Failed to load sequencer firmware file %s, error %d\n",
-			   SAS_RAZOR_SEQUENCER_FW_FILE, err);
+	if (err)
 		return err;
-	}
 
 	err = asd_seq_download_seqs(asd_ha);
 	if (err) {
Index: linux/drivers/scsi/bfa/bfad.c
===================================================================
--- linux.orig/drivers/scsi/bfa/bfad.c
+++ linux/drivers/scsi/bfa/bfad.c
@@ -1749,7 +1749,6 @@ bfad_read_firmware(struct pci_dev *pdev,
 	const struct firmware *fw;
 
 	if (request_firmware(&fw, fw_name, &pdev->dev)) {
-		printk(KERN_ALERT "Can't locate firmware %s\n", fw_name);
 		*bfi_image = NULL;
 		goto out;
 	}
Index: linux/drivers/scsi/ipr.c
===================================================================
--- linux.orig/drivers/scsi/ipr.c
+++ linux/drivers/scsi/ipr.c
@@ -4102,10 +4102,8 @@ static ssize_t ipr_store_update_fw(struc
 	if (endline)
 		*endline = '\0';
 
-	if (request_firmware(&fw_entry, fname, &ioa_cfg->pdev->dev)) {
-		dev_err(&ioa_cfg->pdev->dev, "Firmware file %s not found\n", fname);
+	if (request_firmware(&fw_entry, fname, &ioa_cfg->pdev->dev))
 		return -EIO;
-	}
 
 	image_hdr = (struct ipr_ucode_image_header *)fw_entry->data;
 
Index: linux/drivers/scsi/pm8001/pm8001_ctl.c
===================================================================
--- linux.orig/drivers/scsi/pm8001/pm8001_ctl.c
+++ linux/drivers/scsi/pm8001/pm8001_ctl.c
@@ -842,9 +842,6 @@ static ssize_t pm8001_store_update_fw(st
 			       pm8001_ha->dev);
 
 	if (ret) {
-		pm8001_dbg(pm8001_ha, FAIL,
-			   "Failed to load firmware image file %s, error %d\n",
-			   filename_ptr, ret);
 		pm8001_ha->fw_status = FAIL_OPEN_BIOS_FILE;
 		goto out;
 	}
Index: linux/drivers/scsi/qla1280.c
===================================================================
--- linux.orig/drivers/scsi/qla1280.c
+++ linux/drivers/scsi/qla1280.c
@@ -1513,8 +1513,6 @@ qla1280_request_firmware(struct scsi_qla
 	err = request_firmware(&fw, fwname, &ha->pdev->dev);
 
 	if (err) {
-		printk(KERN_ERR "Failed to load image \"%s\" err %d\n",
-		       fwname, err);
 		fw = ERR_PTR(err);
 		goto unlock;
 	}
Index: linux/drivers/scsi/qla2xxx/qla_init.c
===================================================================
--- linux.orig/drivers/scsi/qla2xxx/qla_init.c
+++ linux/drivers/scsi/qla2xxx/qla_init.c
@@ -8187,10 +8187,6 @@ qla2x00_load_risc(scsi_qla_host_t *vha,
 	/* Load firmware blob. */
 	blob = qla2x00_request_firmware(vha);
 	if (!blob) {
-		ql_log(ql_log_info, vha, 0x0083,
-		    "Firmware image unavailable.\n");
-		ql_log(ql_log_info, vha, 0x0084,
-		    "Firmware images can be retrieved from: "QLA_FW_URL ".\n");
 		return QLA_FUNCTION_FAILED;
 	}
 
@@ -8293,9 +8289,6 @@ qla24xx_load_risc_blob(scsi_qla_host_t *
 
 	blob = qla2x00_request_firmware(vha);
 	if (!blob) {
-		ql_log(ql_log_warn, vha, 0x0092,
-		    "-> Firmware file not found.\n");
-
 		return QLA_FUNCTION_FAILED;
 	}
 
Index: linux/drivers/scsi/qla2xxx/qla_nx.c
===================================================================
--- linux.orig/drivers/scsi/qla2xxx/qla_nx.c
+++ linux/drivers/scsi/qla2xxx/qla_nx.c
@@ -2427,11 +2427,8 @@ try_blob_fw:
 
 	/* Load firmware blob. */
 	blob = ha->hablob = qla2x00_request_firmware(vha);
-	if (!blob) {
-		ql_log(ql_log_fatal, vha, 0x00a3,
-		    "Firmware image not present.\n");
+	if (!blob)
 		goto fw_load_failed;
-	}
 
 	/* Validating firmware blob */
 	if (qla82xx_validate_firmware_blob(vha,
Index: linux/drivers/scsi/qla2xxx/qla_os.c
===================================================================
--- linux.orig/drivers/scsi/qla2xxx/qla_os.c
+++ linux/drivers/scsi/qla2xxx/qla_os.c
@@ -7552,8 +7552,6 @@ qla2x00_request_firmware(scsi_qla_host_t
 		goto out;
 
 	if (request_firmware(&blob->fw, blob->name, &ha->pdev->dev)) {
-		ql_log(ql_log_warn, vha, 0x0063,
-		    "Failed to load firmware image (%s).\n", blob->name);
 		blob->fw = NULL;
 		blob = NULL;
 	}
Index: linux/drivers/scsi/qlogicpti.c
===================================================================
--- linux.orig/drivers/scsi/qlogicpti.c
+++ linux/drivers/scsi/qlogicpti.c
@@ -486,11 +486,8 @@ static int qlogicpti_load_firmware(struc
 	int i, timeout;
 
 	err = request_firmware(&fw, fwname, &qpti->op->dev);
-	if (err) {
-		printk(KERN_ERR "Failed to load image \"%s\" err %d\n",
-		       fwname, err);
+	if (err)
 		return err;
-	}
 	if (fw->size % 2) {
 		printk(KERN_ERR "Bogus length %zu in image \"%s\"\n",
 		       fw->size, fwname);
Index: linux/drivers/staging/rtl8192u/r819xU_firmware.c
===================================================================
--- linux.orig/drivers/staging/rtl8192u/r819xU_firmware.c
+++ linux/drivers/staging/rtl8192u/r819xU_firmware.c
@@ -240,10 +240,8 @@ bool init_firmware(struct net_device *de
 		 */
 		if (rst_opt == OPT_SYSTEM_RESET) {
 			rc = request_firmware(&fw_entry, fw_name[init_step], &priv->udev->dev);
-			if (rc < 0) {
-				RT_TRACE(COMP_ERR, "request firmware fail!\n");
+			if (rc)
 				goto download_firmware_fail;
-			}
 
 			if (fw_entry->size > sizeof(pfirmware->firmware_buf)) {
 				RT_TRACE(COMP_ERR, "img file size exceed the container buffer fail!\n");
Index: linux/drivers/staging/rtl8712/hal_init.c
===================================================================
--- linux.orig/drivers/staging/rtl8712/hal_init.c
+++ linux/drivers/staging/rtl8712/hal_init.c
@@ -72,8 +72,6 @@ int rtl871x_load_fw(struct _adapter *pad
 	dev_info(dev, "r8712u: Loading firmware from \"%s\"\n", firmware_file);
 	rc = request_firmware_nowait(THIS_MODULE, 1, firmware_file, dev,
 				     GFP_KERNEL, padapter, rtl871x_load_fw_cb);
-	if (rc)
-		dev_err(dev, "r8712u: Firmware request error %d\n", rc);
 	return rc;
 }
 MODULE_FIRMWARE("rtlwifi/rtl8712u.bin");
Index: linux/drivers/staging/vt6656/main_usb.c
===================================================================
--- linux.orig/drivers/staging/vt6656/main_usb.c
+++ linux/drivers/staging/vt6656/main_usb.c
@@ -107,11 +107,8 @@ static int vnt_download_firmware(struct
 	dev_dbg(dev, "---->Download firmware\n");
 
 	ret = request_firmware(&fw, FIRMWARE_NAME, dev);
-	if (ret) {
-		dev_err(dev, "firmware file %s request failed (%d)\n",
-			FIRMWARE_NAME, ret);
+	if (ret)
 		goto end;
-	}
 
 	for (ii = 0; ii < fw->size; ii += FIRMWARE_CHUNK_SIZE) {
 		length = min_t(int, fw->size - ii, FIRMWARE_CHUNK_SIZE);
Index: linux/drivers/tty/moxa.c
===================================================================
--- linux.orig/drivers/tty/moxa.c
+++ linux/drivers/tty/moxa.c
@@ -854,13 +854,8 @@ static int moxa_init_board(struct moxa_b
 	}
 
 	ret = request_firmware(&fw, file, dev);
-	if (ret) {
-		printk(KERN_ERR "MOXA: request_firmware failed. Make sure "
-				"you've placed '%s' file into your firmware "
-				"loader directory (e.g. /lib/firmware)\n",
-				file);
+	if (ret)
 		goto err_free;
-	}
 
 	ret = moxa_load_fw(brd, fw);
 
Index: linux/drivers/tty/serial/icom.c
===================================================================
--- linux.orig/drivers/tty/serial/icom.c
+++ linux/drivers/tty/serial/icom.c
@@ -362,7 +362,6 @@ static void load_code(struct icom_port *
 
 	/* Load Call Setup into Adapter */
 	if (request_firmware(&fw, "icom_call_setup.bin", &dev->dev) < 0) {
-		dev_err(&dev->dev,"Unable to load icom_call_setup.bin firmware image\n");
 		status = -1;
 		goto load_code_exit;
 	}
@@ -382,7 +381,6 @@ static void load_code(struct icom_port *
 
 	/* Load Resident DCE portion of Adapter */
 	if (request_firmware(&fw, "icom_res_dce.bin", &dev->dev) < 0) {
-		dev_err(&dev->dev,"Unable to load icom_res_dce.bin firmware image\n");
 		status = -1;
 		goto load_code_exit;
 	}
@@ -427,7 +425,6 @@ static void load_code(struct icom_port *
 	}
 
 	if (request_firmware(&fw, "icom_asc.bin", &dev->dev) < 0) {
-		dev_err(&dev->dev,"Unable to load icom_asc.bin firmware image\n");
 		status = -1;
 		goto load_code_exit;
 	}
Index: linux/drivers/tty/serial/ucc_uart.c
===================================================================
--- linux.orig/drivers/tty/serial/ucc_uart.c
+++ linux/drivers/tty/serial/ucc_uart.c
@@ -1161,10 +1161,8 @@ static void uart_firmware_cont(const str
 	struct device *dev = context;
 	int ret;
 
-	if (!fw) {
-		dev_err(dev, "firmware not found\n");
+	if (!fw)
 		return;
-	}
 
 	firmware = (struct qe_firmware *) fw->data;
 
Index: linux/drivers/usb/atm/cxacru.c
===================================================================
--- linux.orig/drivers/usb/atm/cxacru.c
+++ linux/drivers/usb/atm/cxacru.c
@@ -1084,8 +1084,6 @@ static int cxacru_find_firmware(struct c
 		return -ENOENT;
 	}
 
-	usb_info(usbatm, "found firmware %s\n", buf);
-
 	return 0;
 }
 
Index: linux/drivers/usb/atm/ueagle-atm.c
===================================================================
--- linux.orig/drivers/usb/atm/ueagle-atm.c
+++ linux/drivers/usb/atm/ueagle-atm.c
@@ -606,10 +606,8 @@ static void uea_upload_pre_firmware(cons
 	int ret, size;
 
 	uea_enters(usb);
-	if (!fw_entry) {
-		uea_err(usb, "firmware is not available\n");
+	if (!fw_entry)
 		goto err;
-	}
 
 	pfw = fw_entry->data;
 	size = fw_entry->size;
@@ -704,10 +702,6 @@ static int uea_load_firmware(struct usb_
 	ret = request_firmware_nowait(THIS_MODULE, 1, fw_name, &usb->dev,
 					GFP_KERNEL, usb,
 					uea_upload_pre_firmware);
-	if (ret)
-		uea_err(usb, "firmware %s is not available\n", fw_name);
-	else
-		uea_info(usb, "loading firmware %s\n", fw_name);
 
 	uea_leaves(usb);
 	return ret;
@@ -869,12 +863,8 @@ static int request_dsp(struct uea_softc
 	}
 
 	ret = request_firmware(&sc->dsp_firm, dsp_name, &sc->usb_dev->dev);
-	if (ret < 0) {
-		uea_err(INS_TO_USBDEV(sc),
-		       "requesting firmware %s failed with error %d\n",
-			dsp_name, ret);
+	if (ret)
 		return ret;
-	}
 
 	if (UEA_CHIP_VERSION(sc) == EAGLE_IV)
 		ret = check_dsp_e4(sc->dsp_firm->data, sc->dsp_firm->size);
@@ -1587,12 +1577,8 @@ static int request_cmvs_old(struct uea_s
 
 	cmvs_file_name(sc, cmv_name, 1);
 	ret = request_firmware(fw, cmv_name, &sc->usb_dev->dev);
-	if (ret < 0) {
-		uea_err(INS_TO_USBDEV(sc),
-		       "requesting firmware %s failed with error %d\n",
-		       cmv_name, ret);
+	if (ret)
 		return ret;
-	}
 
 	data = (u8 *) (*fw)->data;
 	size = (*fw)->size;
@@ -1629,9 +1615,6 @@ static int request_cmvs(struct uea_softc
 				"try to get older cmvs\n", cmv_name);
 			return request_cmvs_old(sc, cmvs, fw);
 		}
-		uea_err(INS_TO_USBDEV(sc),
-		       "requesting firmware %s failed with error %d\n",
-		       cmv_name, ret);
 		return ret;
 	}
 
@@ -1914,11 +1897,8 @@ static int load_XILINX_firmware(struct u
 	uea_enters(INS_TO_USBDEV(sc));
 
 	ret = request_firmware(&fw_entry, fw_name, &sc->usb_dev->dev);
-	if (ret) {
-		uea_err(INS_TO_USBDEV(sc), "firmware %s is not available\n",
-		       fw_name);
+	if (ret)
 		goto err0;
-	}
 
 	pfw = fw_entry->data;
 	size = fw_entry->size;
Index: linux/drivers/usb/misc/emi26.c
===================================================================
--- linux.orig/drivers/usb/misc/emi26.c
+++ linux/drivers/usb/misc/emi26.c
@@ -85,21 +85,17 @@ static int emi26_load_firmware (struct u
 
 	err = request_ihex_firmware(&loader_fw, "emi26/loader.fw", &dev->dev);
 	if (err)
-		goto nofw;
+		goto wraperr;
 
 	err = request_ihex_firmware(&bitstream_fw, "emi26/bitstream.fw",
 				    &dev->dev);
 	if (err)
-		goto nofw;
+		goto wraperr;
 
 	err = request_ihex_firmware(&firmware_fw, "emi26/firmware.fw",
 				    &dev->dev);
-	if (err) {
-	nofw:
-		dev_err(&dev->dev, "%s - request_firmware() failed\n",
-			__func__);
+	if (err)
 		goto wraperr;
-	}
 
 	/* Assert reset (stop the CPU in the EMI) */
 	err = emi26_set_reset(dev,1);
Index: linux/drivers/usb/misc/ezusb.c
===================================================================
--- linux.orig/drivers/usb/misc/ezusb.c
+++ linux/drivers/usb/misc/ezusb.c
@@ -64,12 +64,8 @@ static int ezusb_ihex_firmware_download(
 	const struct ihex_binrec *record;
 
 	if (request_ihex_firmware(&firmware, firmware_path,
-				  &dev->dev)) {
-		dev_err(&dev->dev,
-			"%s - request \"%s\" failed\n",
-			__func__, firmware_path);
+				  &dev->dev))
 		goto out;
-	}
 
 	ret = ezusb_set_reset(dev, fx.cpucs_reg, 0);
 	if (ret < 0)
Index: linux/drivers/usb/misc/isight_firmware.c
===================================================================
--- linux.orig/drivers/usb/misc/isight_firmware.c
+++ linux/drivers/usb/misc/isight_firmware.c
@@ -45,7 +45,6 @@ static int isight_firmware_load(struct u
 		return -ENOMEM;
 
 	if (request_firmware(&firmware, "isight.fw", &dev->dev) != 0) {
-		printk(KERN_ERR "Unable to load isight firmware\n");
 		ret = -ENODEV;
 		goto out;
 	}
Index: linux/drivers/usb/serial/io_edgeport.c
===================================================================
--- linux.orig/drivers/usb/serial/io_edgeport.c
+++ linux/drivers/usb/serial/io_edgeport.c
@@ -332,11 +332,8 @@ static void update_edgeport_E2PROM(struc
 
 	response = request_ihex_firmware(&fw, fw_name,
 					 &edge_serial->serial->dev->dev);
-	if (response) {
-		dev_err(dev, "Failed to load image \"%s\" err %d\n",
-		       fw_name, response);
+	if (response)
 		return;
-	}
 
 	rec = (const struct ihex_binrec *)fw->data;
 	BootMajorVersion = rec->data[0];
Index: linux/drivers/usb/serial/io_ti.c
===================================================================
--- linux.orig/drivers/usb/serial/io_ti.c
+++ linux/drivers/usb/serial/io_ti.c
@@ -1006,8 +1006,6 @@ static int download_fw(struct edgeport_s
 
 	status = request_firmware(&fw, fw_name, dev);
 	if (status) {
-		dev_err(dev, "Failed to load image \"%s\" err %d\n",
-				fw_name, status);
 		return status;
 	}
 
Index: linux/drivers/usb/serial/ti_usb_3410_5052.c
===================================================================
--- linux.orig/drivers/usb/serial/ti_usb_3410_5052.c
+++ linux/drivers/usb/serial/ti_usb_3410_5052.c
@@ -1629,10 +1629,8 @@ static int ti_download_firmware(struct t
 	}
 
 check_firmware:
-	if (status) {
-		dev_err(&dev->dev, "%s - firmware not found\n", __func__);
+	if (status)
 		return -ENOENT;
-	}
 	if (fw_p->size > TI_FIRMWARE_BUF_SIZE) {
 		dev_err(&dev->dev, "%s - firmware too large %zu\n", __func__, fw_p->size);
 		release_firmware(fw_p);
Index: linux/drivers/video/fbdev/broadsheetfb.c
===================================================================
--- linux.orig/drivers/video/fbdev/broadsheetfb.c
+++ linux/drivers/video/fbdev/broadsheetfb.c
@@ -743,10 +743,8 @@ static ssize_t broadsheet_loadstore_wave
 		return -EINVAL;
 
 	err = request_firmware(&fw_entry, "broadsheet.wbf", dev);
-	if (err < 0) {
-		dev_err(dev, "Failed to get broadsheet waveform\n");
+	if (err)
 		goto err_failed;
-	}
 
 	/* try to enforce reasonable min max on waveform */
 	if ((fw_entry->size < 8*1024) || (fw_entry->size > 64*1024)) {
Index: linux/drivers/video/fbdev/metronomefb.c
===================================================================
--- linux.orig/drivers/video/fbdev/metronomefb.c
+++ linux/drivers/video/fbdev/metronomefb.c
@@ -679,10 +679,8 @@ static int metronomefb_probe(struct plat
 		a) request the waveform file from userspace
 		b) process waveform and decode into metromem */
 	retval = request_firmware(&fw_entry, "metronome.wbf", &dev->dev);
-	if (retval < 0) {
-		dev_err(&dev->dev, "Failed to get waveform\n");
+	if (retval)
 		goto err_csum_table;
-	}
 
 	retval = load_waveform((u8 *) fw_entry->data, fw_entry->size, 3, 31,
 				par);
Index: linux/sound/drivers/vx/vx_hwdep.c
===================================================================
--- linux.orig/sound/drivers/vx/vx_hwdep.c
+++ linux/sound/drivers/vx/vx_hwdep.c
@@ -58,10 +58,8 @@ int snd_vx_setup_firmware(struct vx_core
 		if (! fw_files[chip->type][i])
 			continue;
 		sprintf(path, "vx/%s", fw_files[chip->type][i]);
-		if (request_firmware(&fw, path, chip->dev)) {
-			snd_printk(KERN_ERR "vx: can't load firmware %s\n", path);
+		if (request_firmware(&fw, path, chip->dev))
 			return -ENOENT;
-		}
 		err = chip->ops->load_dsp(chip, i, fw);
 		if (err < 0) {
 			release_firmware(fw);
Index: linux/sound/isa/msnd/msnd_pinnacle.c
===================================================================
--- linux.orig/sound/isa/msnd/msnd_pinnacle.c
+++ linux/sound/isa/msnd/msnd_pinnacle.c
@@ -376,15 +376,11 @@ static int upload_dsp_code(struct snd_ca
 	outb(HPBLKSEL_0, chip->io + HP_BLKS);
 
 	err = request_firmware(&init_fw, INITCODEFILE, card->dev);
-	if (err < 0) {
-		printk(KERN_ERR LOGNAME ": Error loading " INITCODEFILE);
+	if (err)
 		goto cleanup1;
-	}
 	err = request_firmware(&perm_fw, PERMCODEFILE, card->dev);
-	if (err < 0) {
-		printk(KERN_ERR LOGNAME ": Error loading " PERMCODEFILE);
+	if (err)
 		goto cleanup;
-	}
 
 	memcpy_toio(chip->mappedbase, perm_fw->data, perm_fw->size);
 	if (snd_msnd_upload_host(chip, init_fw->data, init_fw->size) < 0) {
Index: linux/sound/isa/sscape.c
===================================================================
--- linux.orig/sound/isa/sscape.c
+++ linux/sound/isa/sscape.c
@@ -520,10 +520,8 @@ static int sscape_upload_bootblock(struc
 	int ret;
 
 	ret = request_firmware(&init_fw, "scope.cod", card->dev);
-	if (ret < 0) {
-		snd_printk(KERN_ERR "sscape: Error loading scope.cod");
+	if (ret)
 		return ret;
-	}
 	ret = upload_dma_data(sscape, init_fw->data, init_fw->size);
 
 	release_firmware(init_fw);
@@ -560,11 +558,8 @@ static int sscape_upload_microcode(struc
 	snprintf(name, sizeof(name), "sndscape.co%d", version);
 
 	err = request_firmware(&init_fw, name, card->dev);
-	if (err < 0) {
-		snd_printk(KERN_ERR "sscape: Error loading sndscape.co%d",
-				version);
+	if (err)
 		return err;
-	}
 	err = upload_dma_data(sscape, init_fw->data, init_fw->size);
 	if (err == 0)
 		snd_printk(KERN_INFO "sscape: MIDI firmware loaded %zu KBs\n",
Index: linux/sound/isa/wavefront/wavefront_synth.c
===================================================================
--- linux.orig/sound/isa/wavefront/wavefront_synth.c
+++ linux/sound/isa/wavefront/wavefront_synth.c
@@ -1971,10 +1971,8 @@ wavefront_download_firmware (snd_wavefro
 	const struct firmware *firmware;
 
 	err = request_firmware(&firmware, path, dev->card->dev);
-	if (err < 0) {
-		snd_printk(KERN_ERR "firmware (%s) download failed!!!\n", path);
+	if (err)
 		return 1;
-	}
 
 	len = 0;
 	buf = firmware->data;
Index: linux/sound/pci/asihpi/hpidspcd.c
===================================================================
--- linux.orig/sound/pci/asihpi/hpidspcd.c
+++ linux/sound/pci/asihpi/hpidspcd.c
@@ -35,8 +35,6 @@ short hpi_dsp_code_open(u32 adapter, voi
 	err = request_firmware(&firmware, fw_name, &dev->dev);
 
 	if (err || !firmware) {
-		dev_err(&dev->dev, "%d, request_firmware failed for %s\n",
-			err, fw_name);
 		goto error1;
 	}
 	if (firmware->size < sizeof(header)) {
Index: linux/sound/pci/cs46xx/cs46xx_lib.c
===================================================================
--- linux.orig/sound/pci/cs46xx/cs46xx_lib.c
+++ linux/sound/pci/cs46xx/cs46xx_lib.c
@@ -3199,11 +3199,8 @@ int snd_cs46xx_start_dsp(struct snd_cs46
 #ifdef CONFIG_SND_CS46XX_NEW_DSP
 	for (i = 0; i < CS46XX_DSP_MODULES; i++) {
 		err = load_firmware(chip, &chip->modules[i], module_names[i]);
-		if (err < 0) {
-			dev_err(chip->card->dev, "firmware load error [%s]\n",
-				   module_names[i]);
+		if (err < 0)
 			return err;
-		}
 		err = cs46xx_dsp_load_module(chip, chip->modules[i]);
 		if (err < 0) {
 			dev_err(chip->card->dev, "image download error [%s]\n",
Index: linux/sound/pci/echoaudio/echoaudio.c
===================================================================
--- linux.orig/sound/pci/echoaudio/echoaudio.c
+++ linux/sound/pci/echoaudio/echoaudio.c
@@ -48,11 +48,8 @@ static int get_firmware(const struct fir
 		"firmware requested: %s\n", card_fw[fw_index].data);
 	snprintf(name, sizeof(name), "ea/%s", card_fw[fw_index].data);
 	err = request_firmware(fw_entry, name, &chip->pci->dev);
-	if (err < 0)
-		dev_err(chip->card->dev,
-			"get_firmware(): Firmware not available (%d)\n", err);
 #ifdef CONFIG_PM_SLEEP
-	else
+	if (!err)
 		chip->fw_cache[fw_index] = *fw_entry;
 #endif
 	return err;
Index: linux/sound/pci/emu10k1/emu10k1_main.c
===================================================================
--- linux.orig/sound/pci/emu10k1/emu10k1_main.c
+++ linux/sound/pci/emu10k1/emu10k1_main.c
@@ -873,10 +873,8 @@ static int snd_emu10k1_emu1010_init(stru
 	dev_info(emu->card->dev, "emu1010: EMU_HANA_ID = 0x%x\n", reg);
 
 	err = snd_emu1010_load_firmware(emu, 0, &emu->firmware);
-	if (err < 0) {
-		dev_info(emu->card->dev, "emu1010: Loading Firmware failed\n");
+	if (err < 0)
 		return err;
-	}
 
 	/* ID, should read & 0x7f = 0x55 when FPGA programmed. */
 	snd_emu1010_fpga_read(emu, EMU_HANA_ID, &reg);
Index: linux/sound/pci/hda/hda_intel.c
===================================================================
--- linux.orig/sound/pci/hda/hda_intel.c
+++ linux/sound/pci/hda/hda_intel.c
@@ -2018,8 +2018,6 @@ static void azx_firmware_cb(const struct
 
 	if (fw)
 		chip->fw = fw;
-	else
-		dev_err(card->dev, "Cannot load firmware, continue without patching\n");
 	if (!chip->disabled) {
 		/* continue probing */
 		azx_probe_continue(chip);
Index: linux/sound/pci/korg1212/korg1212.c
===================================================================
--- linux.orig/sound/pci/korg1212/korg1212.c
+++ linux/sound/pci/korg1212/korg1212.c
@@ -2258,7 +2258,6 @@ static int snd_korg1212_create(struct sn
 
 	err = request_firmware(&dsp_code, "korg/k1212.dsp", &pci->dev);
 	if (err < 0) {
-		snd_printk(KERN_ERR "firmware not available\n");
 		return err;
 	}
 
Index: linux/sound/pci/mixart/mixart_hwdep.c
===================================================================
--- linux.orig/sound/pci/mixart/mixart_hwdep.c
+++ linux/sound/pci/mixart/mixart_hwdep.c
@@ -566,11 +566,8 @@ int snd_mixart_setup_firmware(struct mix
 
 	for (i = 0; i < 3; i++) {
 		sprintf(path, "mixart/%s", fw_files[i]);
-		if (request_firmware(&fw_entry, path, &mgr->pci->dev)) {
-			dev_err(&mgr->pci->dev,
-				"miXart: can't load firmware %s\n", path);
+		if (request_firmware(&fw_entry, path, &mgr->pci->dev))
 			return -ENOENT;
-		}
 		/* fake hwdep dsp record */
 		err = mixart_dsp_load(mgr, i, fw_entry);
 		release_firmware(fw_entry);
Index: linux/sound/pci/pcxhr/pcxhr_hwdep.c
===================================================================
--- linux.orig/sound/pci/pcxhr/pcxhr_hwdep.c
+++ linux/sound/pci/pcxhr/pcxhr_hwdep.c
@@ -375,12 +375,8 @@ int pcxhr_setup_firmware(struct pcxhr_mg
 		if (!fw_files[fw_set][i])
 			continue;
 		sprintf(path, "pcxhr/%s", fw_files[fw_set][i]);
-		if (request_firmware(&fw_entry, path, &mgr->pci->dev)) {
-			dev_err(&mgr->pci->dev,
-				"pcxhr: can't load firmware %s\n",
-				   path);
+		if (request_firmware(&fw_entry, path, &mgr->pci->dev))
 			return -ENOENT;
-		}
 		/* fake hwdep dsp record */
 		err = pcxhr_dsp_load(mgr, i, fw_entry);
 		release_firmware(fw_entry);
Index: linux/sound/pci/riptide/riptide.c
===================================================================
--- linux.orig/sound/pci/riptide/riptide.c
+++ linux/sound/pci/riptide/riptide.c
@@ -1222,11 +1222,8 @@ static int try_to_load_firmware(struct c
 	if (!chip->fw_entry) {
 		err = request_firmware(&chip->fw_entry, "riptide.hex",
 				       &chip->pci->dev);
-		if (err) {
-			snd_printk(KERN_ERR
-				   "Riptide: Firmware not available %d\n", err);
+		if (err)
 			return -EIO;
-		}
 	}
 	err = loadfirmware(cif, chip->fw_entry->data, chip->fw_entry->size);
 	if (err) {
Index: linux/sound/pci/rme9652/hdsp.c
===================================================================
--- linux.orig/sound/pci/rme9652/hdsp.c
+++ linux/sound/pci/rme9652/hdsp.c
@@ -5196,11 +5196,8 @@ static int hdsp_request_fw_loader(struct
 		return -EINVAL;
 	}
 
-	if (request_firmware(&fw, fwfile, &hdsp->pci->dev)) {
-		dev_err(hdsp->card->dev,
-			"cannot load firmware %s\n", fwfile);
+	if (request_firmware(&fw, fwfile, &hdsp->pci->dev))
 		return -ENOENT;
-	}
 	if (fw->size < HDSP_FIRMWARE_SIZE) {
 		dev_err(hdsp->card->dev,
 			"too short firmware size %d (expected %d)\n",
Index: linux/sound/soc/codecs/wm2000.c
===================================================================
--- linux.orig/sound/soc/codecs/wm2000.c
+++ linux/sound/soc/codecs/wm2000.c
@@ -894,10 +894,8 @@ static int wm2000_i2c_probe(struct i2c_c
 	}
 
 	ret = request_firmware(&fw, filename, &i2c->dev);
-	if (ret != 0) {
-		dev_err(&i2c->dev, "Failed to acquire ANC data: %d\n", ret);
+	if (ret != 0)
 		goto err_supplies;
-	}
 
 	/* Pre-cook the concatenation of the register address onto the image */
 	wm2000->anc_download_size = fw->size + 2;
Index: linux/sound/usb/6fire/firmware.c
===================================================================
--- linux.orig/sound/usb/6fire/firmware.c
+++ linux/sound/usb/6fire/firmware.c
@@ -203,8 +203,6 @@ static int usb6fire_fw_ezusb_upload(
 	ret = request_firmware(&fw, fwname, &device->dev);
 	if (ret < 0) {
 		kfree(rec);
-		dev_err(&intf->dev,
-			"error requesting ezusb firmware %s.\n", fwname);
 		return ret;
 	}
 	ret = usb6fire_fw_ihex_init(fw, rec);
@@ -280,8 +278,6 @@ static int usb6fire_fw_fpga_upload(
 
 	ret = request_firmware(&fw, fwname, &device->dev);
 	if (ret < 0) {
-		dev_err(&intf->dev, "unable to get fpga firmware %s.\n",
-				fwname);
 		kfree(buffer);
 		return -EIO;
 	}
